/******************************************************************************/
/* DISCLAIMER                                                                 */
/* This software is supplied by Renesas Electronics Corporation and is only   */
/* intended for use with Renesas products. No other uses are authorized.This  */
/* software is owned by Renesas Electronics Corporation and is protected      */
/* under all applicable laws, including copyright laws.                       */
/* THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES          */
/* REGARDING THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING  */
/* BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR */
/* PURPOSE AND NON-INFRINGEMENT.  ALL SUCH WARRANTIES ARE EXPRESSLY           */
/* DISCLAIMED.                                                                */
/* TO THE MAXIMUM EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER RENESAS     */
/* ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES SHALL BE       */
/* LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL      */
/* DAMAGES FOR ANY REASON RELATED TO THIS SOFTWARE, EVEN IF RENESAS OR ITS    */
/* AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.           */
/* Renesas reserves the right, without notice, to make changes to this        */
/* software and to discontinue the availability of this software.             */
/* By using this software, you agree to the additional terms and conditions   */
/* found by accessing the following link:                                     */
/* http://www.renesas.com/disclaimer                                          */
/*                                                                            */
/* Device     : RL78/R5F10DMF                                                 */
/* File Name  : iodefine.h                                                    */
/* Abstract   : Definition of Special Function Register (SFR)                 */
/* History    : V1.01  [Device File version]                                  */
/* Options    : -df=C:\Program Files (x86)\Renesas Electronics\CS+\CC\Device\ */
/*              RL78\Devicefile\DR5F10DMF.DVF -o=D:\Softwares\Applications\PM */
/*              VA_Cluster\Greaves\PMVA_March_2023_PCB_Board\PMVA_Cluster_Sof */
/*              tware\iodefine.h -f                                           */
/* Date       : 19-07-2023                                                    */
/* Version    : V1.17.00.02  [df2iodef.exe version]                           */
/* This is a typical example.                                                 */
/*                                                                            */
/******************************************************************************/
#ifndef __R5F10DMFIODEFINE_HEADER__
#define __R5F10DMFIODEFINE_HEADER__

typedef struct
{
    unsigned char no0:1;
    unsigned char no1:1;
    unsigned char no2:1;
    unsigned char no3:1;
    unsigned char no4:1;
    unsigned char no5:1;
    unsigned char no6:1;
    unsigned char no7:1;
} __bitf_T;

typedef struct
{
    unsigned char no0:1;
    unsigned char no1:1;
    unsigned char no2:1;
    unsigned char no3:1;
    unsigned char no4:1;
    unsigned char no5:1;
    unsigned char no6:1;
    unsigned char no7:1;
    unsigned char no8:1;
    unsigned char no9:1;
    unsigned char no10:1;
    unsigned char no11:1;
    unsigned char no12:1;
    unsigned char no13:1;
    unsigned char no14:1;
    unsigned char no15:1;
} __bitf_T2;



#define ADM2        (*(volatile __near unsigned char  *)0x10)
#define ADM2_bit    (*(volatile __near __bitf_T *)0x10)
#define ADTYP       (((volatile __near __bitf_T *)0x10)->no0)
#define AWC         (((volatile __near __bitf_T *)0x10)->no2)
#define ADRCK       (((volatile __near __bitf_T *)0x10)->no3)
#define ADREFM      (((volatile __near __bitf_T *)0x10)->no5)
#define ADREFP0     (((volatile __near __bitf_T *)0x10)->no6)
#define ADREFP1     (((volatile __near __bitf_T *)0x10)->no7)
#define ADUL        (*(volatile __near unsigned char  *)0x11)
#define ADLL        (*(volatile __near unsigned char  *)0x12)
#define ADTES       (*(volatile __near unsigned char  *)0x13)
#define PU0         (*(volatile __near unsigned char  *)0x30)
#define PU0_bit     (*(volatile __near __bitf_T *)0x30)
#define PU1         (*(volatile __near unsigned char  *)0x31)
#define PU1_bit     (*(volatile __near __bitf_T *)0x31)
#define PU3         (*(volatile __near unsigned char  *)0x33)
#define PU3_bit     (*(volatile __near __bitf_T *)0x33)
#define PU4         (*(volatile __near unsigned char  *)0x34)
#define PU4_bit     (*(volatile __near __bitf_T *)0x34)
#define PU5         (*(volatile __near unsigned char  *)0x35)
#define PU5_bit     (*(volatile __near __bitf_T *)0x35)
#define PU6         (*(volatile __near unsigned char  *)0x36)
#define PU6_bit     (*(volatile __near __bitf_T *)0x36)
#define PU7         (*(volatile __near unsigned char  *)0x37)
#define PU7_bit     (*(volatile __near __bitf_T *)0x37)
#define PU8         (*(volatile __near unsigned char  *)0x38)
#define PU8_bit     (*(volatile __near __bitf_T *)0x38)
#define PU9         (*(volatile __near unsigned char  *)0x39)
#define PU9_bit     (*(volatile __near __bitf_T *)0x39)
#define PIM0        (*(volatile __near unsigned char  *)0x40)
#define PIM0_bit    (*(volatile __near __bitf_T *)0x40)
#define PIM1        (*(volatile __near unsigned char  *)0x41)
#define PIM1_bit    (*(volatile __near __bitf_T *)0x41)
#define PIM3        (*(volatile __near unsigned char  *)0x43)
#define PIM3_bit    (*(volatile __near __bitf_T *)0x43)
#define PIM5        (*(volatile __near unsigned char  *)0x45)
#define PIM5_bit    (*(volatile __near __bitf_T *)0x45)
#define PIM6        (*(volatile __near unsigned char  *)0x46)
#define PIM6_bit    (*(volatile __near __bitf_T *)0x46)
#define PIM7        (*(volatile __near unsigned char  *)0x47)
#define PIM7_bit    (*(volatile __near __bitf_T *)0x47)
#define LCDPF0      (*(volatile __near unsigned char  *)0x50)
#define LCDPF0_bit  (*(volatile __near __bitf_T *)0x50)
#define LCDPF1      (*(volatile __near unsigned char  *)0x51)
#define LCDPF1_bit  (*(volatile __near __bitf_T *)0x51)
#define LCDPF3      (*(volatile __near unsigned char  *)0x53)
#define LCDPF3_bit  (*(volatile __near __bitf_T *)0x53)
#define LCDPF5      (*(volatile __near unsigned char  *)0x55)
#define LCDPF5_bit  (*(volatile __near __bitf_T *)0x55)
#define LCDPF7      (*(volatile __near unsigned char  *)0x57)
#define LCDPF7_bit  (*(volatile __near __bitf_T *)0x57)
#define LCDPF8      (*(volatile __near unsigned char  *)0x58)
#define LCDPF8_bit  (*(volatile __near __bitf_T *)0x58)
#define LCDPF9      (*(volatile __near unsigned char  *)0x59)
#define LCDPF9_bit  (*(volatile __near __bitf_T *)0x59)
#define TNFEN0      (*(volatile __near unsigned char  *)0x60)
#define TNFEN0_bit  (*(volatile __near __bitf_T *)0x60)
#define TNFSMP0     (*(volatile __near unsigned char  *)0x61)
#define TNFSMP0_bit (*(volatile __near __bitf_T *)0x61)
#define TNFSMP000   (((volatile __near __bitf_T *)0x61)->no0)
#define TNFSMP001   (((volatile __near __bitf_T *)0x61)->no1)
#define TNFSMP002   (((volatile __near __bitf_T *)0x61)->no2)
#define TNFSMP003   (((volatile __near __bitf_T *)0x61)->no3)
#define TNFSMP010   (((volatile __near __bitf_T *)0x61)->no4)
#define TNFSMP011   (((volatile __near __bitf_T *)0x61)->no5)
#define TNFSMP012   (((volatile __near __bitf_T *)0x61)->no6)
#define TNFSMP013   (((volatile __near __bitf_T *)0x61)->no7)
#define TNFCS0      (*(volatile __near unsigned char  *)0x62)
#define TNFCS0_bit  (*(volatile __near __bitf_T *)0x62)
#define TNFEN1      (*(volatile __near unsigned char  *)0x64)
#define TNFEN1_bit  (*(volatile __near __bitf_T *)0x64)
#define TNFSMP1     (*(volatile __near unsigned char  *)0x65)
#define TNFSMP1_bit (*(volatile __near __bitf_T *)0x65)
#define TNFSMP100   (((volatile __near __bitf_T *)0x65)->no0)
#define TNFSMP101   (((volatile __near __bitf_T *)0x65)->no1)
#define TNFSMP102   (((volatile __near __bitf_T *)0x65)->no2)
#define TNFSMP103   (((volatile __near __bitf_T *)0x65)->no3)
#define TNFSMP110   (((volatile __near __bitf_T *)0x65)->no4)
#define TNFSMP111   (((volatile __near __bitf_T *)0x65)->no5)
#define TNFSMP112   (((volatile __near __bitf_T *)0x65)->no6)
#define TNFSMP113   (((volatile __near __bitf_T *)0x65)->no7)
#define TNFCS1      (*(volatile __near unsigned char  *)0x66)
#define TNFCS1_bit  (*(volatile __near __bitf_T *)0x66)
#define TNFEN2      (*(volatile __near unsigned char  *)0x68)
#define TNFEN2_bit  (*(volatile __near __bitf_T *)0x68)
#define TNFSMP2     (*(volatile __near unsigned char  *)0x69)
#define TNFSMP2_bit (*(volatile __near __bitf_T *)0x69)
#define TNFSMP200   (((volatile __near __bitf_T *)0x69)->no0)
#define TNFSMP201   (((volatile __near __bitf_T *)0x69)->no1)
#define TNFSMP202   (((volatile __near __bitf_T *)0x69)->no2)
#define TNFSMP203   (((volatile __near __bitf_T *)0x69)->no3)
#define TNFSMP210   (((volatile __near __bitf_T *)0x69)->no4)
#define TNFSMP211   (((volatile __near __bitf_T *)0x69)->no5)
#define TNFSMP212   (((volatile __near __bitf_T *)0x69)->no6)
#define TNFSMP213   (((volatile __near __bitf_T *)0x69)->no7)
#define TNFCS2      (*(volatile __near unsigned char  *)0x6A)
#define TNFCS2_bit  (*(volatile __near __bitf_T *)0x6A)
#define SNFEN0      (*(volatile __near unsigned char  *)0x6D)
#define SNFEN0_bit  (*(volatile __near __bitf_T *)0x6D)
#define ADPC        (*(volatile __near unsigned char  *)0x6E)
#define POM         (*(volatile __near unsigned char  *)0x6F)
#define POM_bit     (*(volatile __near __bitf_T *)0x6F)
#define TIS00       (*(volatile __near unsigned char  *)0x70)
#define TIS00_bit   (*(volatile __near __bitf_T *)0x70)
#define TIS010      (((volatile __near __bitf_T *)0x70)->no2)
#define TIS011      (((volatile __near __bitf_T *)0x70)->no3)
#define TIS030      (((volatile __near __bitf_T *)0x70)->no6)
#define TIS031      (((volatile __near __bitf_T *)0x70)->no7)
#define TIS01       (*(volatile __near unsigned char  *)0x71)
#define TIS01_bit   (*(volatile __near __bitf_T *)0x71)
#define TIS050      (((volatile __near __bitf_T *)0x71)->no2)
#define TIS051      (((volatile __near __bitf_T *)0x71)->no3)
#define TIS070      (((volatile __near __bitf_T *)0x71)->no6)
#define TIS071      (((volatile __near __bitf_T *)0x71)->no7)
#define TIS10       (*(volatile __near unsigned char  *)0x72)
#define TIS10_bit   (*(volatile __near __bitf_T *)0x72)
#define TIS110      (((volatile __near __bitf_T *)0x72)->no2)
#define TIS120      (((volatile __near __bitf_T *)0x72)->no4)
#define TIS130      (((volatile __near __bitf_T *)0x72)->no6)
#define TIS131      (((volatile __near __bitf_T *)0x72)->no7)
#define TIS11       (*(volatile __near unsigned char  *)0x73)
#define TIS11_bit   (*(volatile __near __bitf_T *)0x73)
#define TIS140      (((volatile __near __bitf_T *)0x73)->no0)
#define TIS141      (((volatile __near __bitf_T *)0x73)->no1)
#define TIS150      (((volatile __near __bitf_T *)0x73)->no2)
#define TIS151      (((volatile __near __bitf_T *)0x73)->no3)
#define TIS160      (((volatile __near __bitf_T *)0x73)->no4)
#define TIS161      (((volatile __near __bitf_T *)0x73)->no5)
#define TIS170      (((volatile __near __bitf_T *)0x73)->no6)
#define TIS171      (((volatile __near __bitf_T *)0x73)->no7)
#define TIS20       (*(volatile __near unsigned char  *)0x74)
#define TIS20_bit   (*(volatile __near __bitf_T *)0x74)
#define TIS200      (((volatile __near __bitf_T *)0x74)->no0)
#define TIS210      (((volatile __near __bitf_T *)0x74)->no2)
#define TIS211      (((volatile __near __bitf_T *)0x74)->no3)
#define TIS220      (((volatile __near __bitf_T *)0x74)->no4)
#define TIS230      (((volatile __near __bitf_T *)0x74)->no6)
#define TIS231      (((volatile __near __bitf_T *)0x74)->no7)
#define TIS21       (*(volatile __near unsigned char  *)0x75)
#define TIS21_bit   (*(volatile __near __bitf_T *)0x75)
#define TIS240      (((volatile __near __bitf_T *)0x75)->no0)
#define TIS250      (((volatile __near __bitf_T *)0x75)->no2)
#define TIS251      (((volatile __near __bitf_T *)0x75)->no3)
#define TIS260      (((volatile __near __bitf_T *)0x75)->no4)
#define TIS271      (((volatile __near __bitf_T *)0x75)->no7)
#define TOS00       (*(volatile __near unsigned char  *)0x76)
#define TOS00_bit   (*(volatile __near __bitf_T *)0x76)
#define TOS010      (((volatile __near __bitf_T *)0x76)->no2)
#define TOS011      (((volatile __near __bitf_T *)0x76)->no3)
#define TOS030      (((volatile __near __bitf_T *)0x76)->no6)
#define TOS031      (((volatile __near __bitf_T *)0x76)->no7)
#define TOS01       (*(volatile __near unsigned char  *)0x77)
#define TOS01_bit   (*(volatile __near __bitf_T *)0x77)
#define TOS050      (((volatile __near __bitf_T *)0x77)->no2)
#define TOS051      (((volatile __near __bitf_T *)0x77)->no3)
#define TOS070      (((volatile __near __bitf_T *)0x77)->no6)
#define TOS071      (((volatile __near __bitf_T *)0x77)->no7)
#define IAWCTL      (*(volatile __near unsigned char  *)0x78)
#define TOS10       (*(volatile __near unsigned char  *)0x79)
#define TOS10_bit   (*(volatile __near __bitf_T *)0x79)
#define TOS110      (((volatile __near __bitf_T *)0x79)->no2)
#define TOS120      (((volatile __near __bitf_T *)0x79)->no4)
#define TOS130      (((volatile __near __bitf_T *)0x79)->no6)
#define TOS131      (((volatile __near __bitf_T *)0x79)->no7)
#define TOS11       (*(volatile __near unsigned char  *)0x7A)
#define TOS11_bit   (*(volatile __near __bitf_T *)0x7A)
#define TOS140      (((volatile __near __bitf_T *)0x7A)->no0)
#define TOS141      (((volatile __near __bitf_T *)0x7A)->no1)
#define TOS150      (((volatile __near __bitf_T *)0x7A)->no2)
#define TOS151      (((volatile __near __bitf_T *)0x7A)->no3)
#define TOS160      (((volatile __near __bitf_T *)0x7A)->no4)
#define TOS161      (((volatile __near __bitf_T *)0x7A)->no5)
#define TOS170      (((volatile __near __bitf_T *)0x7A)->no6)
#define TOS171      (((volatile __near __bitf_T *)0x7A)->no7)
#define TOS20       (*(volatile __near unsigned char  *)0x7B)
#define TOS20_bit   (*(volatile __near __bitf_T *)0x7B)
#define TOS200      (((volatile __near __bitf_T *)0x7B)->no0)
#define TOS210      (((volatile __near __bitf_T *)0x7B)->no2)
#define TOS211      (((volatile __near __bitf_T *)0x7B)->no3)
#define TOS220      (((volatile __near __bitf_T *)0x7B)->no4)
#define TOS230      (((volatile __near __bitf_T *)0x7B)->no6)
#define TOS231      (((volatile __near __bitf_T *)0x7B)->no7)
#define TOS21       (*(volatile __near unsigned char  *)0x7C)
#define TOS21_bit   (*(volatile __near __bitf_T *)0x7C)
#define TOS240      (((volatile __near __bitf_T *)0x7C)->no0)
#define TOS250      (((volatile __near __bitf_T *)0x7C)->no2)
#define TOS251      (((volatile __near __bitf_T *)0x7C)->no3)
#define TOS270      (((volatile __near __bitf_T *)0x7C)->no6)
#define DFLCTL      (*(volatile __near unsigned char  *)0x90)
#define DFLCTL_bit  (*(volatile __near __bitf_T *)0x90)
#define DFLEN       (((volatile __near __bitf_T *)0x90)->no0)
#define HIOTRM      (*(volatile __near unsigned char  *)0xA0)
#define MDCL        (*(volatile __near unsigned short *)0xE0)
#define MDCH        (*(volatile __near unsigned short *)0xE2)
#define MDUC        (*(volatile __near unsigned char  *)0xE8)
#define MDUC_bit    (*(volatile __near __bitf_T *)0xE8)
#define DIVST       (((volatile __near __bitf_T *)0xE8)->no0)
#define MACSF       (((volatile __near __bitf_T *)0xE8)->no1)
#define MACOF       (((volatile __near __bitf_T *)0xE8)->no2)
#define MDSM        (((volatile __near __bitf_T *)0xE8)->no3)
#define MACMODE     (((volatile __near __bitf_T *)0xE8)->no6)
#define DIVMODE     (((volatile __near __bitf_T *)0xE8)->no7)
#define PER0        (*(volatile __near unsigned char  *)0xF0)
#define PER0_bit    (*(volatile __near __bitf_T *)0xF0)
#define TAU0EN      (((volatile __near __bitf_T *)0xF0)->no0)
#define TAU1EN      (((volatile __near __bitf_T *)0xF0)->no1)
#define TAU2EN      (((volatile __near __bitf_T *)0xF0)->no2)
#define SAU0EN      (((volatile __near __bitf_T *)0xF0)->no3)
#define SAU1EN      (((volatile __near __bitf_T *)0xF0)->no4)
#define LIN0EN      (((volatile __near __bitf_T *)0xF0)->no5)
#define LIN1EN      (((volatile __near __bitf_T *)0xF0)->no6)
#define RTCEN       (((volatile __near __bitf_T *)0xF0)->no7)
#define PER1        (*(volatile __near unsigned char  *)0xF1)
#define PER1_bit    (*(volatile __near __bitf_T *)0xF1)
#define SGEN        (((volatile __near __bitf_T *)0xF1)->no4)
#define MTRCEN      (((volatile __near __bitf_T *)0xF1)->no5)
#define ADCEN       (((volatile __near __bitf_T *)0xF1)->no7)
#define PCKSEL      (*(volatile __near unsigned char  *)0xF2)
#define PCKSEL_bit  (*(volatile __near __bitf_T *)0xF2)
#define SGCLKSEL    (((volatile __near __bitf_T *)0xF2)->no0)
#define CANMCK0     (((volatile __near __bitf_T *)0xF2)->no3)
#define CANMCKE0    (((volatile __near __bitf_T *)0xF2)->no4)
#define OSMC        (*(volatile __near unsigned char  *)0xF3)
#define RPECTL      (*(volatile __near unsigned char  *)0xF5)
#define RPECTL_bit  (*(volatile __near __bitf_T *)0xF5)
#define RPEF        (((volatile __near __bitf_T *)0xF5)->no0)
#define RPERDIS     (((volatile __near __bitf_T *)0xF5)->no7)
#define MDIV        (*(volatile __near unsigned char  *)0xF8)
#define RTCCL       (*(volatile __near unsigned char  *)0xF9)
#define RTCCL_bit   (*(volatile __near __bitf_T *)0xF9)
#define RTCCKS0     (((volatile __near __bitf_T *)0xF9)->no0)
#define RTCCKS1     (((volatile __near __bitf_T *)0xF9)->no1)
#define RESFCLM     (*(volatile __near unsigned char  *)0xFA)
#define POCRES      (*(volatile __near unsigned char  *)0xFB)
#define POCRES_bit  (*(volatile __near __bitf_T *)0xFB)
#define GUARD       (*(volatile __near unsigned char  *)0xFC)
#define GUARD_bit   (*(volatile __near __bitf_T *)0xFC)
#define GDPLL       (((volatile __near __bitf_T *)0xFC)->no0)
#define GDRTC       (((volatile __near __bitf_T *)0xFC)->no1)
#define BCDADJ      (*(volatile __near unsigned char  *)0xFE)
#define SSR00       (*(volatile __near unsigned short *)0x100)
#define SSR00L      (*(volatile __near unsigned char  *)0x100)
#define SSR01       (*(volatile __near unsigned short *)0x102)
#define SSR01L      (*(volatile __near unsigned char  *)0x102)
#define SIR00       (*(volatile __near unsigned short *)0x104)
#define SIR00L      (*(volatile __near unsigned char  *)0x104)
#define SIR01       (*(volatile __near unsigned short *)0x106)
#define SIR01L      (*(volatile __near unsigned char  *)0x106)
#define SMR00       (*(volatile __near unsigned short *)0x108)
#define SMR01       (*(volatile __near unsigned short *)0x10A)
#define SCR00       (*(volatile __near unsigned short *)0x10C)
#define SCR01       (*(volatile __near unsigned short *)0x10E)
#define SE0         (*(volatile __near unsigned short *)0x110)
#define SE0L        (*(volatile __near unsigned char  *)0x110)
#define SE0L_bit    (*(volatile __near __bitf_T *)0x110)
#define SS0         (*(volatile __near unsigned short *)0x112)
#define SS0L        (*(volatile __near unsigned char  *)0x112)
#define SS0L_bit    (*(volatile __near __bitf_T *)0x112)
#define ST0         (*(volatile __near unsigned short *)0x114)
#define ST0L        (*(volatile __near unsigned char  *)0x114)
#define ST0L_bit    (*(volatile __near __bitf_T *)0x114)
#define SPS0        (*(volatile __near unsigned short *)0x116)
#define SPS0L       (*(volatile __near unsigned char  *)0x116)
#define SO0         (*(volatile __near unsigned short *)0x118)
#define SOE0        (*(volatile __near unsigned short *)0x11A)
#define SOE0L       (*(volatile __near unsigned char  *)0x11A)
#define SOE0L_bit   (*(volatile __near __bitf_T *)0x11A)
#define SOL0        (*(volatile __near unsigned short *)0x120)
#define SOL0L       (*(volatile __near unsigned char  *)0x120)
#define PLLSTS      (*(volatile __near unsigned char  *)0x128)
#define PLLSTS_bit  (*(volatile __near __bitf_T *)0x128)
#define SELPLLS     (((volatile __near __bitf_T *)0x128)->no3)
#define LOCK        (((volatile __near __bitf_T *)0x128)->no7)
#define PLLCTL      (*(volatile __near unsigned char  *)0x129)
#define PLLCTL_bit  (*(volatile __near __bitf_T *)0x129)
#define PLLON       (((volatile __near __bitf_T *)0x129)->no0)
#define SELPLL      (((volatile __near __bitf_T *)0x129)->no2)
#define PLLDIV0     (((volatile __near __bitf_T *)0x129)->no4)
#define LCKSEL0     (((volatile __near __bitf_T *)0x129)->no6)
#define LCKSEL1     (((volatile __near __bitf_T *)0x129)->no7)
#define SSR11       (*(volatile __near unsigned short *)0x132)
#define SSR11L      (*(volatile __near unsigned char  *)0x132)
#define SIR11       (*(volatile __near unsigned short *)0x136)
#define SIR11L      (*(volatile __near unsigned char  *)0x136)
#define SMR11       (*(volatile __near unsigned short *)0x13A)
#define SCR11       (*(volatile __near unsigned short *)0x13E)
#define SE1         (*(volatile __near unsigned short *)0x140)
#define SE1L        (*(volatile __near unsigned char  *)0x140)
#define SE1L_bit    (*(volatile __near __bitf_T *)0x140)
#define SS1         (*(volatile __near unsigned short *)0x142)
#define SS1L        (*(volatile __near unsigned char  *)0x142)
#define SS1L_bit    (*(volatile __near __bitf_T *)0x142)
#define ST1         (*(volatile __near unsigned short *)0x144)
#define ST1L        (*(volatile __near unsigned char  *)0x144)
#define ST1L_bit    (*(volatile __near __bitf_T *)0x144)
#define SPS1        (*(volatile __near unsigned short *)0x146)
#define SPS1L       (*(volatile __near unsigned char  *)0x146)
#define SO1         (*(volatile __near unsigned short *)0x148)
#define SO1L        (*(volatile __near unsigned char  *)0x148)
#define SOE1        (*(volatile __near unsigned short *)0x14A)
#define SOE1L       (*(volatile __near unsigned char  *)0x14A)
#define SOE1L_bit   (*(volatile __near __bitf_T *)0x14A)
#define SOL1        (*(volatile __near unsigned short *)0x150)
#define SOL1L       (*(volatile __near unsigned char  *)0x150)
#define MCMPC4      (*(volatile __near unsigned char  *)0x158)
#define MCMPC4_bit  (*(volatile __near __bitf_T *)0x158)
#define DIR40       (((volatile __near __bitf_T *)0x158)->no0)
#define DIR41       (((volatile __near __bitf_T *)0x158)->no1)
#define ADB40       (((volatile __near __bitf_T *)0x158)->no2)
#define ADB41       (((volatile __near __bitf_T *)0x158)->no3)
#define TEN4        (((volatile __near __bitf_T *)0x158)->no4)
#define ZPD4        (((volatile __near __bitf_T *)0x158)->no5)
#define TWIN4       (((volatile __near __bitf_T *)0x158)->no6)
#define AOUT4       (((volatile __near __bitf_T *)0x158)->no7)
#define ZPDS0       (*(volatile __near unsigned char  *)0x15C)
#define ZPDS0_bit   (*(volatile __near __bitf_T *)0x15C)
#define ZPD1S0      (((volatile __near __bitf_T *)0x15C)->no0)
#define ZPD1S1      (((volatile __near __bitf_T *)0x15C)->no1)
#define ZPD1S2      (((volatile __near __bitf_T *)0x15C)->no2)
#define ZPD1PC      (((volatile __near __bitf_T *)0x15C)->no3)
#define ZPD2S0      (((volatile __near __bitf_T *)0x15C)->no4)
#define ZPD2S1      (((volatile __near __bitf_T *)0x15C)->no5)
#define ZPD2S2      (((volatile __near __bitf_T *)0x15C)->no6)
#define ZPD2PC      (((volatile __near __bitf_T *)0x15C)->no7)
#define ZPDS1       (*(volatile __near unsigned char  *)0x15D)
#define ZPDS1_bit   (*(volatile __near __bitf_T *)0x15D)
#define ZPD3S0      (((volatile __near __bitf_T *)0x15D)->no0)
#define ZPD3S1      (((volatile __near __bitf_T *)0x15D)->no1)
#define ZPD3S2      (((volatile __near __bitf_T *)0x15D)->no2)
#define ZPD3PC      (((volatile __near __bitf_T *)0x15D)->no3)
#define ZPD4S0      (((volatile __near __bitf_T *)0x15D)->no4)
#define ZPD4S1      (((volatile __near __bitf_T *)0x15D)->no5)
#define ZPD4S2      (((volatile __near __bitf_T *)0x15D)->no6)
#define ZPD4PC      (((volatile __near __bitf_T *)0x15D)->no7)
#define CMPCTL      (*(volatile __near unsigned char  *)0x15E)
#define CMPCTL_bit  (*(volatile __near __bitf_T *)0x15E)
#define DBCL0       (((volatile __near __bitf_T *)0x15E)->no0)
#define DBCL1       (((volatile __near __bitf_T *)0x15E)->no1)
#define DBCL2       (((volatile __near __bitf_T *)0x15E)->no2)
#define DBCL3       (((volatile __near __bitf_T *)0x15E)->no3)
#define ZPDEN       (*(volatile __near unsigned char  *)0x15F)
#define ZPDEN_bit   (*(volatile __near __bitf_T *)0x15F)
#define ZPD1EN      (((volatile __near __bitf_T *)0x15F)->no0)
#define ZPD2EN      (((volatile __near __bitf_T *)0x15F)->no1)
#define ZPD3EN      (((volatile __near __bitf_T *)0x15F)->no2)
#define ZPD4EN      (((volatile __near __bitf_T *)0x15F)->no3)
#define MCNTC0      (*(volatile __near unsigned char  *)0x160)
#define MCNTC0_bit  (*(volatile __near __bitf_T *)0x160)
#define SMCL0       (((volatile __near __bitf_T *)0x160)->no0)
#define SMCL1       (((volatile __near __bitf_T *)0x160)->no1)
#define SMCL2       (((volatile __near __bitf_T *)0x160)->no2)
#define PCS         (((volatile __near __bitf_T *)0x160)->no3)
#define PCE         (((volatile __near __bitf_T *)0x160)->no4)
#define FULL        (((volatile __near __bitf_T *)0x160)->no5)
#define CAE         (((volatile __near __bitf_T *)0x160)->no7)
#define MCMP1HW     (*(volatile __near unsigned short *)0x162)
#define MCMP10      (*(volatile __near unsigned char  *)0x162)
#define MCMP11      (*(volatile __near unsigned char  *)0x163)
#define MCMP2HW     (*(volatile __near unsigned short *)0x164)
#define MCMP20      (*(volatile __near unsigned char  *)0x164)
#define MCMP21      (*(volatile __near unsigned char  *)0x165)
#define MCMP3HW     (*(volatile __near unsigned short *)0x166)
#define MCMP30      (*(volatile __near unsigned char  *)0x166)
#define MCMP31      (*(volatile __near unsigned char  *)0x167)
#define MCMP4HW     (*(volatile __near unsigned short *)0x168)
#define MCMP40      (*(volatile __near unsigned char  *)0x168)
#define MCMP41      (*(volatile __near unsigned char  *)0x169)
#define MCMPC1      (*(volatile __near unsigned char  *)0x16A)
#define MCMPC1_bit  (*(volatile __near __bitf_T *)0x16A)
#define DIR10       (((volatile __near __bitf_T *)0x16A)->no0)
#define DIR11       (((volatile __near __bitf_T *)0x16A)->no1)
#define ADB10       (((volatile __near __bitf_T *)0x16A)->no2)
#define ADB11       (((volatile __near __bitf_T *)0x16A)->no3)
#define TEN1        (((volatile __near __bitf_T *)0x16A)->no4)
#define ZPD1        (((volatile __near __bitf_T *)0x16A)->no5)
#define TWIN1       (((volatile __near __bitf_T *)0x16A)->no6)
#define AOUT1       (((volatile __near __bitf_T *)0x16A)->no7)
#define MCMPC2      (*(volatile __near unsigned char  *)0x16C)
#define MCMPC2_bit  (*(volatile __near __bitf_T *)0x16C)
#define DIR20       (((volatile __near __bitf_T *)0x16C)->no0)
#define DIR21       (((volatile __near __bitf_T *)0x16C)->no1)
#define ADB20       (((volatile __near __bitf_T *)0x16C)->no2)
#define ADB21       (((volatile __near __bitf_T *)0x16C)->no3)
#define TEN2        (((volatile __near __bitf_T *)0x16C)->no4)
#define ZPD2        (((volatile __near __bitf_T *)0x16C)->no5)
#define TWIN2       (((volatile __near __bitf_T *)0x16C)->no6)
#define AOUT2       (((volatile __near __bitf_T *)0x16C)->no7)
#define MCMPC3      (*(volatile __near unsigned char  *)0x16E)
#define MCMPC3_bit  (*(volatile __near __bitf_T *)0x16E)
#define DIR30       (((volatile __near __bitf_T *)0x16E)->no0)
#define DIR31       (((volatile __near __bitf_T *)0x16E)->no1)
#define ADB30       (((volatile __near __bitf_T *)0x16E)->no2)
#define ADB31       (((volatile __near __bitf_T *)0x16E)->no3)
#define TEN3        (((volatile __near __bitf_T *)0x16E)->no4)
#define ZPD3        (((volatile __near __bitf_T *)0x16E)->no5)
#define TWIN3       (((volatile __near __bitf_T *)0x16E)->no6)
#define AOUT3       (((volatile __near __bitf_T *)0x16E)->no7)
#define TCR00       (*(volatile __near unsigned short *)0x180)
#define TCR01       (*(volatile __near unsigned short *)0x182)
#define TCR02       (*(volatile __near unsigned short *)0x184)
#define TCR03       (*(volatile __near unsigned short *)0x186)
#define TCR04       (*(volatile __near unsigned short *)0x188)
#define TCR05       (*(volatile __near unsigned short *)0x18A)
#define TCR06       (*(volatile __near unsigned short *)0x18C)
#define TCR07       (*(volatile __near unsigned short *)0x18E)
#define TMR00       (*(volatile __near unsigned short *)0x190)
#define TMR01       (*(volatile __near unsigned short *)0x192)
#define TMR02       (*(volatile __near unsigned short *)0x194)
#define TMR03       (*(volatile __near unsigned short *)0x196)
#define TMR04       (*(volatile __near unsigned short *)0x198)
#define TMR05       (*(volatile __near unsigned short *)0x19A)
#define TMR06       (*(volatile __near unsigned short *)0x19C)
#define TMR07       (*(volatile __near unsigned short *)0x19E)
#define TSR00       (*(volatile __near unsigned short *)0x1A0)
#define TSR00L      (*(volatile __near unsigned char  *)0x1A0)
#define TSR01       (*(volatile __near unsigned short *)0x1A2)
#define TSR01L      (*(volatile __near unsigned char  *)0x1A2)
#define TSR02       (*(volatile __near unsigned short *)0x1A4)
#define TSR02L      (*(volatile __near unsigned char  *)0x1A4)
#define TSR03       (*(volatile __near unsigned short *)0x1A6)
#define TSR03L      (*(volatile __near unsigned char  *)0x1A6)
#define TSR04       (*(volatile __near unsigned short *)0x1A8)
#define TSR04L      (*(volatile __near unsigned char  *)0x1A8)
#define TSR05       (*(volatile __near unsigned short *)0x1AA)
#define TSR05L      (*(volatile __near unsigned char  *)0x1AA)
#define TSR06       (*(volatile __near unsigned short *)0x1AC)
#define TSR06L      (*(volatile __near unsigned char  *)0x1AC)
#define TSR07       (*(volatile __near unsigned short *)0x1AE)
#define TSR07L      (*(volatile __near unsigned char  *)0x1AE)
#define TE0         (*(volatile __near unsigned short *)0x1B0)
#define TE0L        (*(volatile __near unsigned char  *)0x1B0)
#define TE0L_bit    (*(volatile __near __bitf_T *)0x1B0)
#define TS0         (*(volatile __near unsigned short *)0x1B2)
#define TS0L        (*(volatile __near unsigned char  *)0x1B2)
#define TS0L_bit    (*(volatile __near __bitf_T *)0x1B2)
#define TT0         (*(volatile __near unsigned short *)0x1B4)
#define TT0L        (*(volatile __near unsigned char  *)0x1B4)
#define TT0L_bit    (*(volatile __near __bitf_T *)0x1B4)
#define TPS0        (*(volatile __near unsigned short *)0x1B6)
#define TO0         (*(volatile __near unsigned short *)0x1B8)
#define TO0L        (*(volatile __near unsigned char  *)0x1B8)
#define TOE0        (*(volatile __near unsigned short *)0x1BA)
#define TOE0L       (*(volatile __near unsigned char  *)0x1BA)
#define TOE0L_bit   (*(volatile __near __bitf_T *)0x1BA)
#define TOL0        (*(volatile __near unsigned short *)0x1BC)
#define TOL0L       (*(volatile __near unsigned char  *)0x1BC)
#define TOM0        (*(volatile __near unsigned short *)0x1BE)
#define TOM0L       (*(volatile __near unsigned char  *)0x1BE)
#define TCR10       (*(volatile __near unsigned short *)0x1C0)
#define TCR11       (*(volatile __near unsigned short *)0x1C2)
#define TCR12       (*(volatile __near unsigned short *)0x1C4)
#define TCR13       (*(volatile __near unsigned short *)0x1C6)
#define TCR14       (*(volatile __near unsigned short *)0x1C8)
#define TCR15       (*(volatile __near unsigned short *)0x1CA)
#define TCR16       (*(volatile __near unsigned short *)0x1CC)
#define TCR17       (*(volatile __near unsigned short *)0x1CE)
#define TMR10       (*(volatile __near unsigned short *)0x1D0)
#define TMR11       (*(volatile __near unsigned short *)0x1D2)
#define TMR12       (*(volatile __near unsigned short *)0x1D4)
#define TMR13       (*(volatile __near unsigned short *)0x1D6)
#define TMR14       (*(volatile __near unsigned short *)0x1D8)
#define TMR15       (*(volatile __near unsigned short *)0x1DA)
#define TMR16       (*(volatile __near unsigned short *)0x1DC)
#define TMR17       (*(volatile __near unsigned short *)0x1DE)
#define TSR10       (*(volatile __near unsigned short *)0x1E0)
#define TSR10L      (*(volatile __near unsigned char  *)0x1E0)
#define TSR11       (*(volatile __near unsigned short *)0x1E2)
#define TSR11L      (*(volatile __near unsigned char  *)0x1E2)
#define TSR12       (*(volatile __near unsigned short *)0x1E4)
#define TSR12L      (*(volatile __near unsigned char  *)0x1E4)
#define TSR13       (*(volatile __near unsigned short *)0x1E6)
#define TSR13L      (*(volatile __near unsigned char  *)0x1E6)
#define TSR14       (*(volatile __near unsigned short *)0x1E8)
#define TSR14L      (*(volatile __near unsigned char  *)0x1E8)
#define TSR15       (*(volatile __near unsigned short *)0x1EA)
#define TSR15L      (*(volatile __near unsigned char  *)0x1EA)
#define TSR16       (*(volatile __near unsigned short *)0x1EC)
#define TSR16L      (*(volatile __near unsigned char  *)0x1EC)
#define TSR17       (*(volatile __near unsigned short *)0x1EE)
#define TSR17L      (*(volatile __near unsigned char  *)0x1EE)
#define TE1         (*(volatile __near unsigned short *)0x1F0)
#define TE1L        (*(volatile __near unsigned char  *)0x1F0)
#define TE1L_bit    (*(volatile __near __bitf_T *)0x1F0)
#define TS1         (*(volatile __near unsigned short *)0x1F2)
#define TS1L        (*(volatile __near unsigned char  *)0x1F2)
#define TS1L_bit    (*(volatile __near __bitf_T *)0x1F2)
#define TT1         (*(volatile __near unsigned short *)0x1F4)
#define TT1L        (*(volatile __near unsigned char  *)0x1F4)
#define TT1L_bit    (*(volatile __near __bitf_T *)0x1F4)
#define TPS1        (*(volatile __near unsigned short *)0x1F6)
#define TO1         (*(volatile __near unsigned short *)0x1F8)
#define TO1L        (*(volatile __near unsigned char  *)0x1F8)
#define TOE1        (*(volatile __near unsigned short *)0x1FA)
#define TOE1L       (*(volatile __near unsigned char  *)0x1FA)
#define TOE1L_bit   (*(volatile __near __bitf_T *)0x1FA)
#define TOL1        (*(volatile __near unsigned short *)0x1FC)
#define TOL1L       (*(volatile __near unsigned char  *)0x1FC)
#define TOM1        (*(volatile __near unsigned short *)0x1FE)
#define TOM1L       (*(volatile __near unsigned char  *)0x1FE)
#define TCR20       (*(volatile __near unsigned short *)0x200)
#define TCR21       (*(volatile __near unsigned short *)0x202)
#define TCR22       (*(volatile __near unsigned short *)0x204)
#define TCR23       (*(volatile __near unsigned short *)0x206)
#define TCR24       (*(volatile __near unsigned short *)0x208)
#define TCR25       (*(volatile __near unsigned short *)0x20A)
#define TCR26       (*(volatile __near unsigned short *)0x20C)
#define TCR27       (*(volatile __near unsigned short *)0x20E)
#define TMR20       (*(volatile __near unsigned short *)0x210)
#define TMR21       (*(volatile __near unsigned short *)0x212)
#define TMR22       (*(volatile __near unsigned short *)0x214)
#define TMR23       (*(volatile __near unsigned short *)0x216)
#define TMR24       (*(volatile __near unsigned short *)0x218)
#define TMR25       (*(volatile __near unsigned short *)0x21A)
#define TMR26       (*(volatile __near unsigned short *)0x21C)
#define TMR27       (*(volatile __near unsigned short *)0x21E)
#define TSR20       (*(volatile __near unsigned short *)0x220)
#define TSR20L      (*(volatile __near unsigned char  *)0x220)
#define TSR21       (*(volatile __near unsigned short *)0x222)
#define TSR21L      (*(volatile __near unsigned char  *)0x222)
#define TSR22       (*(volatile __near unsigned short *)0x224)
#define TSR22L      (*(volatile __near unsigned char  *)0x224)
#define TSR23       (*(volatile __near unsigned short *)0x226)
#define TSR23L      (*(volatile __near unsigned char  *)0x226)
#define TSR24       (*(volatile __near unsigned short *)0x228)
#define TSR24L      (*(volatile __near unsigned char  *)0x228)
#define TSR25       (*(volatile __near unsigned short *)0x22A)
#define TSR25L      (*(volatile __near unsigned char  *)0x22A)
#define TSR26       (*(volatile __near unsigned short *)0x22C)
#define TSR26L      (*(volatile __near unsigned char  *)0x22C)
#define TSR27       (*(volatile __near unsigned short *)0x22E)
#define TSR27L      (*(volatile __near unsigned char  *)0x22E)
#define TE2         (*(volatile __near unsigned short *)0x230)
#define TE2L        (*(volatile __near unsigned char  *)0x230)
#define TE2L_bit    (*(volatile __near __bitf_T *)0x230)
#define TS2         (*(volatile __near unsigned short *)0x232)
#define TS2L        (*(volatile __near unsigned char  *)0x232)
#define TS2L_bit    (*(volatile __near __bitf_T *)0x232)
#define TT2         (*(volatile __near unsigned short *)0x234)
#define TT2L        (*(volatile __near unsigned char  *)0x234)
#define TT2L_bit    (*(volatile __near __bitf_T *)0x234)
#define TPS2        (*(volatile __near unsigned short *)0x236)
#define TO2         (*(volatile __near unsigned short *)0x238)
#define TO2L        (*(volatile __near unsigned char  *)0x238)
#define TOE2        (*(volatile __near unsigned short *)0x23A)
#define TOE2L       (*(volatile __near unsigned char  *)0x23A)
#define TOE2L_bit   (*(volatile __near __bitf_T *)0x23A)
#define TOL2        (*(volatile __near unsigned short *)0x23C)
#define TOL2L       (*(volatile __near unsigned char  *)0x23C)
#define TOM2        (*(volatile __near unsigned short *)0x23E)
#define TOM2L       (*(volatile __near unsigned char  *)0x23E)
#define UF0CTL0     (*(volatile __near unsigned char  *)0x240)
#define UF0CTL0_bit (*(volatile __near __bitf_T *)0x240)
#define UF0SL       (((volatile __near __bitf_T *)0x240)->no0)
#define UF0CL       (((volatile __near __bitf_T *)0x240)->no1)
#define UF0PS0      (((volatile __near __bitf_T *)0x240)->no2)
#define UF0PS1      (((volatile __near __bitf_T *)0x240)->no3)
#define UF0DIR      (((volatile __near __bitf_T *)0x240)->no4)
#define UF0RXE      (((volatile __near __bitf_T *)0x240)->no5)
#define UF0TXE      (((volatile __near __bitf_T *)0x240)->no6)
#define UF0OPT0     (*(volatile __near unsigned char  *)0x241)
#define UF0OPT0_bit (*(volatile __near __bitf_T *)0x241)
#define UF0RDL      (((volatile __near __bitf_T *)0x241)->no0)
#define UF0TDL      (((volatile __near __bitf_T *)0x241)->no1)
#define UF0BLS0     (((volatile __near __bitf_T *)0x241)->no2)
#define UF0BLS1     (((volatile __near __bitf_T *)0x241)->no3)
#define UF0BLS2     (((volatile __near __bitf_T *)0x241)->no4)
#define UF0BTT      (((volatile __near __bitf_T *)0x241)->no5)
#define UF0BRT      (((volatile __near __bitf_T *)0x241)->no6)
#define UF0BRF      (((volatile __near __bitf_T *)0x241)->no7)
#define UF0CTL1     (*(volatile __near unsigned short *)0x242)
#define UF0OPT1     (*(volatile __near unsigned char  *)0x244)
#define UF0OPT1_bit (*(volatile __near __bitf_T *)0x244)
#define UF0DCS      (((volatile __near __bitf_T *)0x244)->no0)
#define UF0MD0      (((volatile __near __bitf_T *)0x244)->no1)
#define UF0MD1      (((volatile __near __bitf_T *)0x244)->no2)
#define UF0ACE      (((volatile __near __bitf_T *)0x244)->no3)
#define UF0IPCS     (((volatile __near __bitf_T *)0x244)->no4)
#define UF0EBC      (((volatile __near __bitf_T *)0x244)->no5)
#define UF0EBL      (((volatile __near __bitf_T *)0x244)->no6)
#define UF0EBE      (((volatile __near __bitf_T *)0x244)->no7)
#define UF0OPT2     (*(volatile __near unsigned char  *)0x245)
#define UF0OPT2_bit (*(volatile __near __bitf_T *)0x245)
#define UF0ITS      (((volatile __near __bitf_T *)0x245)->no0)
#define UF0RXFL     (((volatile __near __bitf_T *)0x245)->no1)
#define UF0STR      (*(volatile __near unsigned short *)0x246)
#define UF0STC      (*(volatile __near unsigned short *)0x248)
#define UF0WTX      (*(volatile __near unsigned short *)0x24A)
#define UF0WTXB     (*(volatile __near unsigned char  *)0x24A)
#define UF0ID       (*(volatile __near unsigned char  *)0x24E)
#define UF0BUF0     (*(volatile __near unsigned char  *)0x24F)
#define UF0BUF1     (*(volatile __near unsigned char  *)0x250)
#define UF0BUF2     (*(volatile __near unsigned char  *)0x251)
#define UF0BUF3     (*(volatile __near unsigned char  *)0x252)
#define UF0BUF4     (*(volatile __near unsigned char  *)0x253)
#define UF0BUF5     (*(volatile __near unsigned char  *)0x254)
#define UF0BUF6     (*(volatile __near unsigned char  *)0x255)
#define UF0BUF7     (*(volatile __near unsigned char  *)0x256)
#define UF0BUF8     (*(volatile __near unsigned char  *)0x257)
#define UF0BUCTL    (*(volatile __near unsigned short *)0x258)
#define UF1CTL0     (*(volatile __near unsigned char  *)0x260)
#define UF1CTL0_bit (*(volatile __near __bitf_T *)0x260)
#define UF1SL       (((volatile __near __bitf_T *)0x260)->no0)
#define UF1CL       (((volatile __near __bitf_T *)0x260)->no1)
#define UF1PS0      (((volatile __near __bitf_T *)0x260)->no2)
#define UF1PS1      (((volatile __near __bitf_T *)0x260)->no3)
#define UF1DIR      (((volatile __near __bitf_T *)0x260)->no4)
#define UF1RXE      (((volatile __near __bitf_T *)0x260)->no5)
#define UF1TXE      (((volatile __near __bitf_T *)0x260)->no6)
#define UF1OPT0     (*(volatile __near unsigned char  *)0x261)
#define UF1OPT0_bit (*(volatile __near __bitf_T *)0x261)
#define UF1RDL      (((volatile __near __bitf_T *)0x261)->no0)
#define UF1TDL      (((volatile __near __bitf_T *)0x261)->no1)
#define UF1BLS0     (((volatile __near __bitf_T *)0x261)->no2)
#define UF1BLS1     (((volatile __near __bitf_T *)0x261)->no3)
#define UF1BLS2     (((volatile __near __bitf_T *)0x261)->no4)
#define UF1BTT      (((volatile __near __bitf_T *)0x261)->no5)
#define UF1BRT      (((volatile __near __bitf_T *)0x261)->no6)
#define UF1BRF      (((volatile __near __bitf_T *)0x261)->no7)
#define UF1CTL1     (*(volatile __near unsigned short *)0x262)
#define UF1OPT1     (*(volatile __near unsigned char  *)0x264)
#define UF1OPT1_bit (*(volatile __near __bitf_T *)0x264)
#define UF1DCS      (((volatile __near __bitf_T *)0x264)->no0)
#define UF1MD0      (((volatile __near __bitf_T *)0x264)->no1)
#define UF1MD1      (((volatile __near __bitf_T *)0x264)->no2)
#define UF1ACE      (((volatile __near __bitf_T *)0x264)->no3)
#define UF1IPCS     (((volatile __near __bitf_T *)0x264)->no4)
#define UF1EBC      (((volatile __near __bitf_T *)0x264)->no5)
#define UF1EBL      (((volatile __near __bitf_T *)0x264)->no6)
#define UF1EBE      (((volatile __near __bitf_T *)0x264)->no7)
#define UF1OPT2     (*(volatile __near unsigned char  *)0x265)
#define UF1OPT2_bit (*(volatile __near __bitf_T *)0x265)
#define UF1ITS      (((volatile __near __bitf_T *)0x265)->no0)
#define UF1RXFL     (((volatile __near __bitf_T *)0x265)->no1)
#define UF1STR      (*(volatile __near unsigned short *)0x266)
#define UF1STC      (*(volatile __near unsigned short *)0x268)
#define UF1WTX      (*(volatile __near unsigned short *)0x26A)
#define UF1WTXB     (*(volatile __near unsigned char  *)0x26A)
#define UF1ID       (*(volatile __near unsigned char  *)0x26E)
#define UF1BUF0     (*(volatile __near unsigned char  *)0x26F)
#define UF1BUF1     (*(volatile __near unsigned char  *)0x270)
#define UF1BUF2     (*(volatile __near unsigned char  *)0x271)
#define UF1BUF3     (*(volatile __near unsigned char  *)0x272)
#define UF1BUF4     (*(volatile __near unsigned char  *)0x273)
#define UF1BUF5     (*(volatile __near unsigned char  *)0x274)
#define UF1BUF6     (*(volatile __near unsigned char  *)0x275)
#define UF1BUF7     (*(volatile __near unsigned char  *)0x276)
#define UF1BUF8     (*(volatile __near unsigned char  *)0x277)
#define UF1BUCTL    (*(volatile __near unsigned short *)0x278)
#define SG0FL       (*(volatile __near unsigned short *)0x280)
#define SG0FH       (*(volatile __near unsigned short *)0x282)
#define SG0PWM      (*(volatile __near unsigned short *)0x284)
#define SG0SDF      (*(volatile __near unsigned char  *)0x286)
#define SG0CTL      (*(volatile __near unsigned char  *)0x287)
#define SG0CTL_bit  (*(volatile __near __bitf_T *)0x287)
#define SG0ALDS     (((volatile __near __bitf_T *)0x287)->no0)
#define SG0OS       (((volatile __near __bitf_T *)0x287)->no1)
#define SG0PWR      (((volatile __near __bitf_T *)0x287)->no4)
#define SG0ITH      (*(volatile __near unsigned short *)0x288)
#define CRC0CTL     (*(volatile __near unsigned char  *)0x2F0)
#define CRC0CTL_bit (*(volatile __near __bitf_T *)0x2F0)
#define FEA0        (((volatile __near __bitf_T *)0x2F0)->no0)
#define FEA1        (((volatile __near __bitf_T *)0x2F0)->no1)
#define FEA2        (((volatile __near __bitf_T *)0x2F0)->no2)
#define FEA3        (((volatile __near __bitf_T *)0x2F0)->no3)
#define FEA4        (((volatile __near __bitf_T *)0x2F0)->no4)
#define FEA5        (((volatile __near __bitf_T *)0x2F0)->no5)
#define CRC0EN      (((volatile __near __bitf_T *)0x2F0)->no7)
#define PGCRCL      (*(volatile __near unsigned short *)0x2F2)
#define CRCD        (*(volatile __near unsigned short *)0x2FA)
#define SEG0        (*(volatile __near unsigned char  *)0x300)
#define SEG1        (*(volatile __near unsigned char  *)0x301)
#define SEG2        (*(volatile __near unsigned char  *)0x302)
#define SEG3        (*(volatile __near unsigned char  *)0x303)
#define SEG4        (*(volatile __near unsigned char  *)0x304)
#define SEG5        (*(volatile __near unsigned char  *)0x305)
#define SEG6        (*(volatile __near unsigned char  *)0x306)
#define SEG7        (*(volatile __near unsigned char  *)0x307)
#define SEG8        (*(volatile __near unsigned char  *)0x308)
#define SEG9        (*(volatile __near unsigned char  *)0x309)
#define SEG10       (*(volatile __near unsigned char  *)0x30A)
#define SEG11       (*(volatile __near unsigned char  *)0x30B)
#define SEG12       (*(volatile __near unsigned char  *)0x30C)
#define SEG13       (*(volatile __near unsigned char  *)0x30D)
#define SEG14       (*(volatile __near unsigned char  *)0x30E)
#define SEG15       (*(volatile __near unsigned char  *)0x30F)
#define SEG16       (*(volatile __near unsigned char  *)0x310)
#define SEG17       (*(volatile __near unsigned char  *)0x311)
#define SEG18       (*(volatile __near unsigned char  *)0x312)
#define SEG19       (*(volatile __near unsigned char  *)0x313)
#define SEG20       (*(volatile __near unsigned char  *)0x314)
#define SEG21       (*(volatile __near unsigned char  *)0x315)
#define SEG22       (*(volatile __near unsigned char  *)0x316)
#define SEG23       (*(volatile __near unsigned char  *)0x317)
#define SEG24       (*(volatile __near unsigned char  *)0x318)
#define SEG25       (*(volatile __near unsigned char  *)0x319)
#define SEG26       (*(volatile __near unsigned char  *)0x31A)
#define SEG27       (*(volatile __near unsigned char  *)0x31B)
#define SEG28       (*(volatile __near unsigned char  *)0x31C)
#define SEG29       (*(volatile __near unsigned char  *)0x31D)
#define SEG30       (*(volatile __near unsigned char  *)0x31E)
#define SEG31       (*(volatile __near unsigned char  *)0x31F)
#define SEG32       (*(volatile __near unsigned char  *)0x320)
#define SEG33       (*(volatile __near unsigned char  *)0x321)
#define SEG34       (*(volatile __near unsigned char  *)0x322)
#define SEG35       (*(volatile __near unsigned char  *)0x323)
#define SEG36       (*(volatile __near unsigned char  *)0x324)
#define SEG37       (*(volatile __near unsigned char  *)0x325)
#define SEG38       (*(volatile __near unsigned char  *)0x326)
#define SEG39       (*(volatile __near unsigned char  *)0x327)
#define SEG40       (*(volatile __near unsigned char  *)0x328)
#define SEG41       (*(volatile __near unsigned char  *)0x329)
#define SEG42       (*(volatile __near unsigned char  *)0x32A)
#define SEG43       (*(volatile __near unsigned char  *)0x32B)
#define SEG44       (*(volatile __near unsigned char  *)0x32C)
#define SEG45       (*(volatile __near unsigned char  *)0x32D)
#define SEG46       (*(volatile __near unsigned char  *)0x32E)
#define SEG47       (*(volatile __near unsigned char  *)0x32F)
#define C0GMCTRL    (*(volatile __near unsigned short *)0x5C0)
#define C0GMABT     (*(volatile __near unsigned short *)0x5C6)
#define C0GMABTD    (*(volatile __near unsigned char  *)0x5C8)
#define C0GMCS      (*(volatile __near unsigned char  *)0x5CE)
#define C0MASK1L    (*(volatile __near unsigned short *)0x5D0)
#define C0MASK1H    (*(volatile __near unsigned short *)0x5D2)
#define C0MASK2L    (*(volatile __near unsigned short *)0x5D4)
#define C0MASK2H    (*(volatile __near unsigned short *)0x5D6)
#define C0MASK3L    (*(volatile __near unsigned short *)0x5D8)
#define C0MASK3H    (*(volatile __near unsigned short *)0x5DA)
#define C0MASK4L    (*(volatile __near unsigned short *)0x5DC)
#define C0MASK4H    (*(volatile __near unsigned short *)0x5DE)
#define C0CTRL      (*(volatile __near unsigned short *)0x5E0)
#define C0LEC       (*(volatile __near unsigned char  *)0x5E2)
#define C0INFO      (*(volatile __near unsigned char  *)0x5E3)
#define C0ERC       (*(volatile __near unsigned short *)0x5E4)
#define C0IE        (*(volatile __near unsigned short *)0x5E6)
#define C0INTS      (*(volatile __near unsigned short *)0x5E8)
#define C0BRP       (*(volatile __near unsigned char  *)0x5EA)
#define C0BTR       (*(volatile __near unsigned short *)0x5EC)
#define C0LIPT      (*(volatile __near unsigned char  *)0x5EE)
#define C0RGPT      (*(volatile __near unsigned short *)0x5F0)
#define C0LOPT      (*(volatile __near unsigned char  *)0x5F2)
#define C0TGPT      (*(volatile __near unsigned short *)0x5F4)
#define C0TS        (*(volatile __near unsigned short *)0x5F6)
#define C0MDB0100   (*(volatile __near unsigned short *)0x600)
#define C0MDB000    (*(volatile __near unsigned char  *)0x600)
#define C0MDB100    (*(volatile __near unsigned char  *)0x601)
#define C0MDB2300   (*(volatile __near unsigned short *)0x602)
#define C0MDB200    (*(volatile __near unsigned char  *)0x602)
#define C0MDB300    (*(volatile __near unsigned char  *)0x603)
#define C0MDB4500   (*(volatile __near unsigned short *)0x604)
#define C0MDB400    (*(volatile __near unsigned char  *)0x604)
#define C0MDB500    (*(volatile __near unsigned char  *)0x605)
#define C0MDB6700   (*(volatile __near unsigned short *)0x606)
#define C0MDB600    (*(volatile __near unsigned char  *)0x606)
#define C0MDB700    (*(volatile __near unsigned char  *)0x607)
#define C0MDLC00    (*(volatile __near unsigned char  *)0x608)
#define C0MCONF00   (*(volatile __near unsigned char  *)0x609)
#define C0MIDL00    (*(volatile __near unsigned short *)0x60A)
#define C0MIDH00    (*(volatile __near unsigned short *)0x60C)
#define C0MCTRL00   (*(volatile __near unsigned short *)0x60E)
#define C0MDB0101   (*(volatile __near unsigned short *)0x610)
#define C0MDB001    (*(volatile __near unsigned char  *)0x610)
#define C0MDB101    (*(volatile __near unsigned char  *)0x611)
#define C0MDB2301   (*(volatile __near unsigned short *)0x612)
#define C0MDB201    (*(volatile __near unsigned char  *)0x612)
#define C0MDB301    (*(volatile __near unsigned char  *)0x613)
#define C0MDB4501   (*(volatile __near unsigned short *)0x614)
#define C0MDB401    (*(volatile __near unsigned char  *)0x614)
#define C0MDB501    (*(volatile __near unsigned char  *)0x615)
#define C0MDB6701   (*(volatile __near unsigned short *)0x616)
#define C0MDB601    (*(volatile __near unsigned char  *)0x616)
#define C0MDB701    (*(volatile __near unsigned char  *)0x617)
#define C0MDLC01    (*(volatile __near unsigned char  *)0x618)
#define C0MCONF01   (*(volatile __near unsigned char  *)0x619)
#define C0MIDL01    (*(volatile __near unsigned short *)0x61A)
#define C0MIDH01    (*(volatile __near unsigned short *)0x61C)
#define C0MCTRL01   (*(volatile __near unsigned short *)0x61E)
#define C0MDB0102   (*(volatile __near unsigned short *)0x620)
#define C0MDB002    (*(volatile __near unsigned char  *)0x620)
#define C0MDB102    (*(volatile __near unsigned char  *)0x621)
#define C0MDB2302   (*(volatile __near unsigned short *)0x622)
#define C0MDB202    (*(volatile __near unsigned char  *)0x622)
#define C0MDB302    (*(volatile __near unsigned char  *)0x623)
#define C0MDB4502   (*(volatile __near unsigned short *)0x624)
#define C0MDB402    (*(volatile __near unsigned char  *)0x624)
#define C0MDB502    (*(volatile __near unsigned char  *)0x625)
#define C0MDB6702   (*(volatile __near unsigned short *)0x626)
#define C0MDB602    (*(volatile __near unsigned char  *)0x626)
#define C0MDB702    (*(volatile __near unsigned char  *)0x627)
#define C0MDLC02    (*(volatile __near unsigned char  *)0x628)
#define C0MCONF02   (*(volatile __near unsigned char  *)0x629)
#define C0MIDL02    (*(volatile __near unsigned short *)0x62A)
#define C0MIDH02    (*(volatile __near unsigned short *)0x62C)
#define C0MCTRL02   (*(volatile __near unsigned short *)0x62E)
#define C0MDB0103   (*(volatile __near unsigned short *)0x630)
#define C0MDB003    (*(volatile __near unsigned char  *)0x630)
#define C0MDB103    (*(volatile __near unsigned char  *)0x631)
#define C0MDB2303   (*(volatile __near unsigned short *)0x632)
#define C0MDB203    (*(volatile __near unsigned char  *)0x632)
#define C0MDB303    (*(volatile __near unsigned char  *)0x633)
#define C0MDB4503   (*(volatile __near unsigned short *)0x634)
#define C0MDB403    (*(volatile __near unsigned char  *)0x634)
#define C0MDB503    (*(volatile __near unsigned char  *)0x635)
#define C0MDB6703   (*(volatile __near unsigned short *)0x636)
#define C0MDB603    (*(volatile __near unsigned char  *)0x636)
#define C0MDB703    (*(volatile __near unsigned char  *)0x637)
#define C0MDLC03    (*(volatile __near unsigned char  *)0x638)
#define C0MCONF03   (*(volatile __near unsigned char  *)0x639)
#define C0MIDL03    (*(volatile __near unsigned short *)0x63A)
#define C0MIDH03    (*(volatile __near unsigned short *)0x63C)
#define C0MCTRL03   (*(volatile __near unsigned short *)0x63E)
#define C0MDB0104   (*(volatile __near unsigned short *)0x640)
#define C0MDB004    (*(volatile __near unsigned char  *)0x640)
#define C0MDB104    (*(volatile __near unsigned char  *)0x641)
#define C0MDB2304   (*(volatile __near unsigned short *)0x642)
#define C0MDB204    (*(volatile __near unsigned char  *)0x642)
#define C0MDB304    (*(volatile __near unsigned char  *)0x643)
#define C0MDB4504   (*(volatile __near unsigned short *)0x644)
#define C0MDB404    (*(volatile __near unsigned char  *)0x644)
#define C0MDB504    (*(volatile __near unsigned char  *)0x645)
#define C0MDB6704   (*(volatile __near unsigned short *)0x646)
#define C0MDB604    (*(volatile __near unsigned char  *)0x646)
#define C0MDB704    (*(volatile __near unsigned char  *)0x647)
#define C0MDLC04    (*(volatile __near unsigned char  *)0x648)
#define C0MCONF04   (*(volatile __near unsigned char  *)0x649)
#define C0MIDL04    (*(volatile __near unsigned short *)0x64A)
#define C0MIDH04    (*(volatile __near unsigned short *)0x64C)
#define C0MCTRL04   (*(volatile __near unsigned short *)0x64E)
#define C0MDB0105   (*(volatile __near unsigned short *)0x650)
#define C0MDB005    (*(volatile __near unsigned char  *)0x650)
#define C0MDB105    (*(volatile __near unsigned char  *)0x651)
#define C0MDB2305   (*(volatile __near unsigned short *)0x652)
#define C0MDB205    (*(volatile __near unsigned char  *)0x652)
#define C0MDB305    (*(volatile __near unsigned char  *)0x653)
#define C0MDB4505   (*(volatile __near unsigned short *)0x654)
#define C0MDB405    (*(volatile __near unsigned char  *)0x654)
#define C0MDB505    (*(volatile __near unsigned char  *)0x655)
#define C0MDB6705   (*(volatile __near unsigned short *)0x656)
#define C0MDB605    (*(volatile __near unsigned char  *)0x656)
#define C0MDB705    (*(volatile __near unsigned char  *)0x657)
#define C0MDLC05    (*(volatile __near unsigned char  *)0x658)
#define C0MCONF05   (*(volatile __near unsigned char  *)0x659)
#define C0MIDL05    (*(volatile __near unsigned short *)0x65A)
#define C0MIDH05    (*(volatile __near unsigned short *)0x65C)
#define C0MCTRL05   (*(volatile __near unsigned short *)0x65E)
#define C0MDB0106   (*(volatile __near unsigned short *)0x660)
#define C0MDB006    (*(volatile __near unsigned char  *)0x660)
#define C0MDB106    (*(volatile __near unsigned char  *)0x661)
#define C0MDB2306   (*(volatile __near unsigned short *)0x662)
#define C0MDB206    (*(volatile __near unsigned char  *)0x662)
#define C0MDB306    (*(volatile __near unsigned char  *)0x663)
#define C0MDB4506   (*(volatile __near unsigned short *)0x664)
#define C0MDB406    (*(volatile __near unsigned char  *)0x664)
#define C0MDB506    (*(volatile __near unsigned char  *)0x665)
#define C0MDB6706   (*(volatile __near unsigned short *)0x666)
#define C0MDB606    (*(volatile __near unsigned char  *)0x666)
#define C0MDB706    (*(volatile __near unsigned char  *)0x667)
#define C0MDLC06    (*(volatile __near unsigned char  *)0x668)
#define C0MCONF06   (*(volatile __near unsigned char  *)0x669)
#define C0MIDL06    (*(volatile __near unsigned short *)0x66A)
#define C0MIDH06    (*(volatile __near unsigned short *)0x66C)
#define C0MCTRL06   (*(volatile __near unsigned short *)0x66E)
#define C0MDB0107   (*(volatile __near unsigned short *)0x670)
#define C0MDB007    (*(volatile __near unsigned char  *)0x670)
#define C0MDB107    (*(volatile __near unsigned char  *)0x671)
#define C0MDB2307   (*(volatile __near unsigned short *)0x672)
#define C0MDB207    (*(volatile __near unsigned char  *)0x672)
#define C0MDB307    (*(volatile __near unsigned char  *)0x673)
#define C0MDB4507   (*(volatile __near unsigned short *)0x674)
#define C0MDB407    (*(volatile __near unsigned char  *)0x674)
#define C0MDB507    (*(volatile __near unsigned char  *)0x675)
#define C0MDB6707   (*(volatile __near unsigned short *)0x676)
#define C0MDB607    (*(volatile __near unsigned char  *)0x676)
#define C0MDB707    (*(volatile __near unsigned char  *)0x677)
#define C0MDLC07    (*(volatile __near unsigned char  *)0x678)
#define C0MCONF07   (*(volatile __near unsigned char  *)0x679)
#define C0MIDL07    (*(volatile __near unsigned short *)0x67A)
#define C0MIDH07    (*(volatile __near unsigned short *)0x67C)
#define C0MCTRL07   (*(volatile __near unsigned short *)0x67E)
#define C0MDB0108   (*(volatile __near unsigned short *)0x680)
#define C0MDB008    (*(volatile __near unsigned char  *)0x680)
#define C0MDB108    (*(volatile __near unsigned char  *)0x681)
#define C0MDB2308   (*(volatile __near unsigned short *)0x682)
#define C0MDB208    (*(volatile __near unsigned char  *)0x682)
#define C0MDB308    (*(volatile __near unsigned char  *)0x683)
#define C0MDB4508   (*(volatile __near unsigned short *)0x684)
#define C0MDB408    (*(volatile __near unsigned char  *)0x684)
#define C0MDB508    (*(volatile __near unsigned char  *)0x685)
#define C0MDB6708   (*(volatile __near unsigned short *)0x686)
#define C0MDB608    (*(volatile __near unsigned char  *)0x686)
#define C0MDB708    (*(volatile __near unsigned char  *)0x687)
#define C0MDLC08    (*(volatile __near unsigned char  *)0x688)
#define C0MCONF08   (*(volatile __near unsigned char  *)0x689)
#define C0MIDL08    (*(volatile __near unsigned short *)0x68A)
#define C0MIDH08    (*(volatile __near unsigned short *)0x68C)
#define C0MCTRL08   (*(volatile __near unsigned short *)0x68E)
#define C0MDB0109   (*(volatile __near unsigned short *)0x690)
#define C0MDB009    (*(volatile __near unsigned char  *)0x690)
#define C0MDB109    (*(volatile __near unsigned char  *)0x691)
#define C0MDB2309   (*(volatile __near unsigned short *)0x692)
#define C0MDB209    (*(volatile __near unsigned char  *)0x692)
#define C0MDB309    (*(volatile __near unsigned char  *)0x693)
#define C0MDB4509   (*(volatile __near unsigned short *)0x694)
#define C0MDB409    (*(volatile __near unsigned char  *)0x694)
#define C0MDB509    (*(volatile __near unsigned char  *)0x695)
#define C0MDB6709   (*(volatile __near unsigned short *)0x696)
#define C0MDB609    (*(volatile __near unsigned char  *)0x696)
#define C0MDB709    (*(volatile __near unsigned char  *)0x697)
#define C0MDLC09    (*(volatile __near unsigned char  *)0x698)
#define C0MCONF09   (*(volatile __near unsigned char  *)0x699)
#define C0MIDL09    (*(volatile __near unsigned short *)0x69A)
#define C0MIDH09    (*(volatile __near unsigned short *)0x69C)
#define C0MCTRL09   (*(volatile __near unsigned short *)0x69E)
#define C0MDB0110   (*(volatile __near unsigned short *)0x6A0)
#define C0MDB010    (*(volatile __near unsigned char  *)0x6A0)
#define C0MDB110    (*(volatile __near unsigned char  *)0x6A1)
#define C0MDB2310   (*(volatile __near unsigned short *)0x6A2)
#define C0MDB210    (*(volatile __near unsigned char  *)0x6A2)
#define C0MDB310    (*(volatile __near unsigned char  *)0x6A3)
#define C0MDB4510   (*(volatile __near unsigned short *)0x6A4)
#define C0MDB410    (*(volatile __near unsigned char  *)0x6A4)
#define C0MDB510    (*(volatile __near unsigned char  *)0x6A5)
#define C0MDB6710   (*(volatile __near unsigned short *)0x6A6)
#define C0MDB610    (*(volatile __near unsigned char  *)0x6A6)
#define C0MDB710    (*(volatile __near unsigned char  *)0x6A7)
#define C0MDLC10    (*(volatile __near unsigned char  *)0x6A8)
#define C0MCONF10   (*(volatile __near unsigned char  *)0x6A9)
#define C0MIDL10    (*(volatile __near unsigned short *)0x6AA)
#define C0MIDH10    (*(volatile __near unsigned short *)0x6AC)
#define C0MCTRL10   (*(volatile __near unsigned short *)0x6AE)
#define C0MDB0111   (*(volatile __near unsigned short *)0x6B0)
#define C0MDB011    (*(volatile __near unsigned char  *)0x6B0)
#define C0MDB111    (*(volatile __near unsigned char  *)0x6B1)
#define C0MDB2311   (*(volatile __near unsigned short *)0x6B2)
#define C0MDB211    (*(volatile __near unsigned char  *)0x6B2)
#define C0MDB311    (*(volatile __near unsigned char  *)0x6B3)
#define C0MDB4511   (*(volatile __near unsigned short *)0x6B4)
#define C0MDB411    (*(volatile __near unsigned char  *)0x6B4)
#define C0MDB511    (*(volatile __near unsigned char  *)0x6B5)
#define C0MDB6711   (*(volatile __near unsigned short *)0x6B6)
#define C0MDB611    (*(volatile __near unsigned char  *)0x6B6)
#define C0MDB711    (*(volatile __near unsigned char  *)0x6B7)
#define C0MDLC11    (*(volatile __near unsigned char  *)0x6B8)
#define C0MCONF11   (*(volatile __near unsigned char  *)0x6B9)
#define C0MIDL11    (*(volatile __near unsigned short *)0x6BA)
#define C0MIDH11    (*(volatile __near unsigned short *)0x6BC)
#define C0MCTRL11   (*(volatile __near unsigned short *)0x6BE)
#define C0MDB0112   (*(volatile __near unsigned short *)0x6C0)
#define C0MDB012    (*(volatile __near unsigned char  *)0x6C0)
#define C0MDB112    (*(volatile __near unsigned char  *)0x6C1)
#define C0MDB2312   (*(volatile __near unsigned short *)0x6C2)
#define C0MDB212    (*(volatile __near unsigned char  *)0x6C2)
#define C0MDB312    (*(volatile __near unsigned char  *)0x6C3)
#define C0MDB4512   (*(volatile __near unsigned short *)0x6C4)
#define C0MDB412    (*(volatile __near unsigned char  *)0x6C4)
#define C0MDB512    (*(volatile __near unsigned char  *)0x6C5)
#define C0MDB6712   (*(volatile __near unsigned short *)0x6C6)
#define C0MDB612    (*(volatile __near unsigned char  *)0x6C6)
#define C0MDB712    (*(volatile __near unsigned char  *)0x6C7)
#define C0MDLC12    (*(volatile __near unsigned char  *)0x6C8)
#define C0MCONF12   (*(volatile __near unsigned char  *)0x6C9)
#define C0MIDL12    (*(volatile __near unsigned short *)0x6CA)
#define C0MIDH12    (*(volatile __near unsigned short *)0x6CC)
#define C0MCTRL12   (*(volatile __near unsigned short *)0x6CE)
#define C0MDB0113   (*(volatile __near unsigned short *)0x6D0)
#define C0MDB013    (*(volatile __near unsigned char  *)0x6D0)
#define C0MDB113    (*(volatile __near unsigned char  *)0x6D1)
#define C0MDB2313   (*(volatile __near unsigned short *)0x6D2)
#define C0MDB213    (*(volatile __near unsigned char  *)0x6D2)
#define C0MDB313    (*(volatile __near unsigned char  *)0x6D3)
#define C0MDB4513   (*(volatile __near unsigned short *)0x6D4)
#define C0MDB413    (*(volatile __near unsigned char  *)0x6D4)
#define C0MDB513    (*(volatile __near unsigned char  *)0x6D5)
#define C0MDB6713   (*(volatile __near unsigned short *)0x6D6)
#define C0MDB613    (*(volatile __near unsigned char  *)0x6D6)
#define C0MDB713    (*(volatile __near unsigned char  *)0x6D7)
#define C0MDLC13    (*(volatile __near unsigned char  *)0x6D8)
#define C0MCONF13   (*(volatile __near unsigned char  *)0x6D9)
#define C0MIDL13    (*(volatile __near unsigned short *)0x6DA)
#define C0MIDH13    (*(volatile __near unsigned short *)0x6DC)
#define C0MCTRL13   (*(volatile __near unsigned short *)0x6DE)
#define C0MDB0114   (*(volatile __near unsigned short *)0x6E0)
#define C0MDB014    (*(volatile __near unsigned char  *)0x6E0)
#define C0MDB114    (*(volatile __near unsigned char  *)0x6E1)
#define C0MDB2314   (*(volatile __near unsigned short *)0x6E2)
#define C0MDB214    (*(volatile __near unsigned char  *)0x6E2)
#define C0MDB314    (*(volatile __near unsigned char  *)0x6E3)
#define C0MDB4514   (*(volatile __near unsigned short *)0x6E4)
#define C0MDB414    (*(volatile __near unsigned char  *)0x6E4)
#define C0MDB514    (*(volatile __near unsigned char  *)0x6E5)
#define C0MDB6714   (*(volatile __near unsigned short *)0x6E6)
#define C0MDB614    (*(volatile __near unsigned char  *)0x6E6)
#define C0MDB714    (*(volatile __near unsigned char  *)0x6E7)
#define C0MDLC14    (*(volatile __near unsigned char  *)0x6E8)
#define C0MCONF14   (*(volatile __near unsigned char  *)0x6E9)
#define C0MIDL14    (*(volatile __near unsigned short *)0x6EA)
#define C0MIDH14    (*(volatile __near unsigned short *)0x6EC)
#define C0MCTRL14   (*(volatile __near unsigned short *)0x6EE)
#define C0MDB0115   (*(volatile __near unsigned short *)0x6F0)
#define C0MDB015    (*(volatile __near unsigned char  *)0x6F0)
#define C0MDB115    (*(volatile __near unsigned char  *)0x6F1)
#define C0MDB2315   (*(volatile __near unsigned short *)0x6F2)
#define C0MDB215    (*(volatile __near unsigned char  *)0x6F2)
#define C0MDB315    (*(volatile __near unsigned char  *)0x6F3)
#define C0MDB4515   (*(volatile __near unsigned short *)0x6F4)
#define C0MDB415    (*(volatile __near unsigned char  *)0x6F4)
#define C0MDB515    (*(volatile __near unsigned char  *)0x6F5)
#define C0MDB6715   (*(volatile __near unsigned short *)0x6F6)
#define C0MDB615    (*(volatile __near unsigned char  *)0x6F6)
#define C0MDB715    (*(volatile __near unsigned char  *)0x6F7)
#define C0MDLC15    (*(volatile __near unsigned char  *)0x6F8)
#define C0MCONF15   (*(volatile __near unsigned char  *)0x6F9)
#define C0MIDL15    (*(volatile __near unsigned short *)0x6FA)
#define C0MIDH15    (*(volatile __near unsigned short *)0x6FC)
#define C0MCTRL15   (*(volatile __near unsigned short *)0x6FE)
#define P0          (*(volatile __near unsigned char  *)0xFF00)
#define P0_bit      (*(volatile __near __bitf_T *)0xFF00)
#define P1          (*(volatile __near unsigned char  *)0xFF01)
#define P1_bit      (*(volatile __near __bitf_T *)0xFF01)
#define P2          (*(volatile __near unsigned char  *)0xFF02)
#define P2_bit      (*(volatile __near __bitf_T *)0xFF02)
#define P3          (*(volatile __near unsigned char  *)0xFF03)
#define P3_bit      (*(volatile __near __bitf_T *)0xFF03)
#define P4          (*(volatile __near unsigned char  *)0xFF04)
#define P4_bit      (*(volatile __near __bitf_T *)0xFF04)
#define P5          (*(volatile __near unsigned char  *)0xFF05)
#define P5_bit      (*(volatile __near __bitf_T *)0xFF05)
#define P6          (*(volatile __near unsigned char  *)0xFF06)
#define P6_bit      (*(volatile __near __bitf_T *)0xFF06)
#define P7          (*(volatile __near unsigned char  *)0xFF07)
#define P7_bit      (*(volatile __near __bitf_T *)0xFF07)
#define P8          (*(volatile __near unsigned char  *)0xFF08)
#define P8_bit      (*(volatile __near __bitf_T *)0xFF08)
#define P9          (*(volatile __near unsigned char  *)0xFF09)
#define P9_bit      (*(volatile __near __bitf_T *)0xFF09)
#define P12         (*(volatile __near unsigned char  *)0xFF0C)
#define P12_bit     (*(volatile __near __bitf_T *)0xFF0C)
#define P13         (*(volatile __near unsigned char  *)0xFF0D)
#define P13_bit     (*(volatile __near __bitf_T *)0xFF0D)
#define SDR00       (*(volatile __near unsigned short *)0xFF10)
#define SDR00L      (*(volatile __near unsigned char  *)0xFF10)
#define SDR01       (*(volatile __near unsigned short *)0xFF12)
#define SDR01L      (*(volatile __near unsigned char  *)0xFF12)
#define SDR11       (*(volatile __near unsigned short *)0xFF16)
#define SDR11L      (*(volatile __near unsigned char  *)0xFF16)
#define TDR00       (*(volatile __near unsigned short *)0xFF18)
#define TDR01       (*(volatile __near unsigned short *)0xFF1A)
#define ADCR        (*(volatile __near unsigned short *)0xFF1E)
#define ADCRH       (*(volatile __near unsigned char  *)0xFF1F)
#define PM0         (*(volatile __near unsigned char  *)0xFF20)
#define PM0_bit     (*(volatile __near __bitf_T *)0xFF20)
#define PM1         (*(volatile __near unsigned char  *)0xFF21)
#define PM1_bit     (*(volatile __near __bitf_T *)0xFF21)
#define PM2         (*(volatile __near unsigned char  *)0xFF22)
#define PM2_bit     (*(volatile __near __bitf_T *)0xFF22)
#define PM3         (*(volatile __near unsigned char  *)0xFF23)
#define PM3_bit     (*(volatile __near __bitf_T *)0xFF23)
#define PM4         (*(volatile __near unsigned char  *)0xFF24)
#define PM4_bit     (*(volatile __near __bitf_T *)0xFF24)
#define PM5         (*(volatile __near unsigned char  *)0xFF25)
#define PM5_bit     (*(volatile __near __bitf_T *)0xFF25)
#define PM6         (*(volatile __near unsigned char  *)0xFF26)
#define PM6_bit     (*(volatile __near __bitf_T *)0xFF26)
#define PM7         (*(volatile __near unsigned char  *)0xFF27)
#define PM7_bit     (*(volatile __near __bitf_T *)0xFF27)
#define PM8         (*(volatile __near unsigned char  *)0xFF28)
#define PM8_bit     (*(volatile __near __bitf_T *)0xFF28)
#define PM9         (*(volatile __near unsigned char  *)0xFF29)
#define PM9_bit     (*(volatile __near __bitf_T *)0xFF29)
#define ADM0        (*(volatile __near unsigned char  *)0xFF30)
#define ADM0_bit    (*(volatile __near __bitf_T *)0xFF30)
#define ADCE        (((volatile __near __bitf_T *)0xFF30)->no0)
#define LV0         (((volatile __near __bitf_T *)0xFF30)->no1)
#define LV1         (((volatile __near __bitf_T *)0xFF30)->no2)
#define FR0         (((volatile __near __bitf_T *)0xFF30)->no3)
#define FR1         (((volatile __near __bitf_T *)0xFF30)->no4)
#define FR2         (((volatile __near __bitf_T *)0xFF30)->no5)
#define ADMD        (((volatile __near __bitf_T *)0xFF30)->no6)
#define ADCS        (((volatile __near __bitf_T *)0xFF30)->no7)
#define ADS         (*(volatile __near unsigned char  *)0xFF31)
#define ADS_bit     (*(volatile __near __bitf_T *)0xFF31)
#define ADM1        (*(volatile __near unsigned char  *)0xFF32)
#define ADM1_bit    (*(volatile __near __bitf_T *)0xFF32)
#define ADTRS0      (((volatile __near __bitf_T *)0xFF32)->no0)
#define ADTRS1      (((volatile __near __bitf_T *)0xFF32)->no1)
#define ADSCM       (((volatile __near __bitf_T *)0xFF32)->no5)
#define ADTMD0      (((volatile __near __bitf_T *)0xFF32)->no6)
#define ADTMD1      (((volatile __near __bitf_T *)0xFF32)->no7)
#define SUBCUDW     (*(volatile __near unsigned short *)0xFF34)
#define RTCSEL      (*(volatile __near unsigned char  *)0xFF36)
#define RTCSEL_bit  (*(volatile __near __bitf_T *)0xFF36)
#define RTCTIS00    (((volatile __near __bitf_T *)0xFF36)->no0)
#define RTCTIS01    (((volatile __near __bitf_T *)0xFF36)->no1)
#define RTCTIS10    (((volatile __near __bitf_T *)0xFF36)->no2)
#define RTCTIS11    (((volatile __near __bitf_T *)0xFF36)->no3)
#define RTCOSEL0    (((volatile __near __bitf_T *)0xFF36)->no6)
#define RTCOSEL1    (((volatile __near __bitf_T *)0xFF36)->no7)
#define SMPC        (*(volatile __near unsigned char  *)0xFF37)
#define SMPC_bit    (*(volatile __near __bitf_T *)0xFF37)
#define EN1         (((volatile __near __bitf_T *)0xFF37)->no0)
#define EN2         (((volatile __near __bitf_T *)0xFF37)->no1)
#define EN3         (((volatile __near __bitf_T *)0xFF37)->no2)
#define EN4         (((volatile __near __bitf_T *)0xFF37)->no3)
#define MOD1        (((volatile __near __bitf_T *)0xFF37)->no4)
#define MOD2        (((volatile __near __bitf_T *)0xFF37)->no5)
#define MOD3        (((volatile __near __bitf_T *)0xFF37)->no6)
#define MOD4        (((volatile __near __bitf_T *)0xFF37)->no7)
#define EGP0        (*(volatile __near unsigned char  *)0xFF38)
#define EGP0_bit    (*(volatile __near __bitf_T *)0xFF38)
#define EGN0        (*(volatile __near unsigned char  *)0xFF39)
#define EGN0_bit    (*(volatile __near __bitf_T *)0xFF39)
#define STSEL0      (*(volatile __near unsigned char  *)0xFF3C)
#define STSEL0_bit  (*(volatile __near __bitf_T *)0xFF3C)
#define SUARTF0     (((volatile __near __bitf_T *)0xFF3C)->no0)
#define SCSI000     (((volatile __near __bitf_T *)0xFF3C)->no2)
#define SCSI001     (((volatile __near __bitf_T *)0xFF3C)->no3)
#define SCSI010     (((volatile __near __bitf_T *)0xFF3C)->no4)
#define STSEL1      (*(volatile __near unsigned char  *)0xFF3D)
#define STSEL1_bit  (*(volatile __near __bitf_T *)0xFF3D)
#define TMCAN0      (((volatile __near __bitf_T *)0xFF3D)->no0)
#define SCAN0       (((volatile __near __bitf_T *)0xFF3D)->no2)
#define SIIC0       (((volatile __near __bitf_T *)0xFF3D)->no6)
#define TISELSE     (*(volatile __near unsigned char  *)0xFF3E)
#define TISELSE_bit (*(volatile __near __bitf_T *)0xFF3E)
#define TI05SEL0    (((volatile __near __bitf_T *)0xFF3E)->no0)
#define TI05SEL1    (((volatile __near __bitf_T *)0xFF3E)->no1)
#define TOTICON0    (((volatile __near __bitf_T *)0xFF3E)->no6)
#define TOTICON1    (((volatile __near __bitf_T *)0xFF3E)->no7)
#define SGSEL       (*(volatile __near unsigned char  *)0xFF3F)
#define SGSEL_bit   (*(volatile __near __bitf_T *)0xFF3F)
#define LCDMD       (*(volatile __near unsigned char  *)0xFF40)
#define LCDMD_bit   (*(volatile __near __bitf_T *)0xFF40)
#define MDSET0      (((volatile __near __bitf_T *)0xFF40)->no4)
#define MDSET1      (((volatile __near __bitf_T *)0xFF40)->no5)
#define LCDM        (*(volatile __near unsigned char  *)0xFF41)
#define LCDM_bit    (*(volatile __near __bitf_T *)0xFF41)
#define SCOC        (((volatile __near __bitf_T *)0xFF41)->no6)
#define LCDON       (((volatile __near __bitf_T *)0xFF41)->no7)
#define LCDC0       (*(volatile __near unsigned char  *)0xFF42)
#define LCDC0_bit   (*(volatile __near __bitf_T *)0xFF42)
#define UF0TX       (*(volatile __near unsigned short *)0xFF48)
#define UF0TXB      (*(volatile __near unsigned char  *)0xFF48)
#define UF0RX       (*(volatile __near unsigned short *)0xFF4A)
#define UF0RXB      (*(volatile __near unsigned char  *)0xFF4A)
#define UF1TX       (*(volatile __near unsigned short *)0xFF4C)
#define UF1TXB      (*(volatile __near unsigned char  *)0xFF4C)
#define UF1RX       (*(volatile __near unsigned short *)0xFF4E)
#define UF1RXB      (*(volatile __near unsigned char  *)0xFF4E)
#define ITMC        (*(volatile __near unsigned short *)0xFF50)
#define SEC         (*(volatile __near unsigned char  *)0xFF52)
#define MIN         (*(volatile __near unsigned char  *)0xFF53)
#define HOUR        (*(volatile __near unsigned char  *)0xFF54)
#define WEEK        (*(volatile __near unsigned char  *)0xFF55)
#define DAY         (*(volatile __near unsigned char  *)0xFF56)
#define MONTH       (*(volatile __near unsigned char  *)0xFF57)
#define YEAR        (*(volatile __near unsigned char  *)0xFF58)
#define SUBCUD      (*(volatile __near unsigned char  *)0xFF59)
#define ALARMWM     (*(volatile __near unsigned char  *)0xFF5A)
#define ALARMWH     (*(volatile __near unsigned char  *)0xFF5B)
#define ALARMWW     (*(volatile __near unsigned char  *)0xFF5C)
#define RTCC0       (*(volatile __near unsigned char  *)0xFF5D)
#define RTCC0_bit   (*(volatile __near __bitf_T *)0xFF5D)
#define CT0         (((volatile __near __bitf_T *)0xFF5D)->no0)
#define CT1         (((volatile __near __bitf_T *)0xFF5D)->no1)
#define CT2         (((volatile __near __bitf_T *)0xFF5D)->no2)
#define AMPM        (((volatile __near __bitf_T *)0xFF5D)->no3)
#define RCLOE1      (((volatile __near __bitf_T *)0xFF5D)->no5)
#define RTCE        (((volatile __near __bitf_T *)0xFF5D)->no7)
#define RTCC1       (*(volatile __near unsigned char  *)0xFF5E)
#define RTCC1_bit   (*(volatile __near __bitf_T *)0xFF5E)
#define RWAIT       (((volatile __near __bitf_T *)0xFF5E)->no0)
#define RWST        (((volatile __near __bitf_T *)0xFF5E)->no1)
#define RIFG        (((volatile __near __bitf_T *)0xFF5E)->no3)
#define WAFG        (((volatile __near __bitf_T *)0xFF5E)->no4)
#define WALIE       (((volatile __near __bitf_T *)0xFF5E)->no6)
#define WALE        (((volatile __near __bitf_T *)0xFF5E)->no7)
#define TDR02       (*(volatile __near unsigned short *)0xFF64)
#define TDR03       (*(volatile __near unsigned short *)0xFF66)
#define TDR04       (*(volatile __near unsigned short *)0xFF68)
#define TDR05       (*(volatile __near unsigned short *)0xFF6A)
#define TDR06       (*(volatile __near unsigned short *)0xFF6C)
#define TDR07       (*(volatile __near unsigned short *)0xFF6E)
#define TDR10       (*(volatile __near unsigned short *)0xFF70)
#define TDR11       (*(volatile __near unsigned short *)0xFF72)
#define TDR12       (*(volatile __near unsigned short *)0xFF74)
#define TDR13       (*(volatile __near unsigned short *)0xFF76)
#define TDR14       (*(volatile __near unsigned short *)0xFF78)
#define TDR15       (*(volatile __near unsigned short *)0xFF7A)
#define TDR16       (*(volatile __near unsigned short *)0xFF7C)
#define TDR17       (*(volatile __near unsigned short *)0xFF7E)
#define TDR20       (*(volatile __near unsigned short *)0xFF90)
#define TDR21       (*(volatile __near unsigned short *)0xFF92)
#define TDR22       (*(volatile __near unsigned short *)0xFF94)
#define TDR23       (*(volatile __near unsigned short *)0xFF96)
#define TDR24       (*(volatile __near unsigned short *)0xFF98)
#define TDR25       (*(volatile __near unsigned short *)0xFF9A)
#define TDR26       (*(volatile __near unsigned short *)0xFF9C)
#define TDR27       (*(volatile __near unsigned short *)0xFF9E)
#define CMC         (*(volatile __near unsigned char  *)0xFFA0)
#define CSC         (*(volatile __near unsigned char  *)0xFFA1)
#define CSC_bit     (*(volatile __near __bitf_T *)0xFFA1)
#define HIOSTOP     (((volatile __near __bitf_T *)0xFFA1)->no0)
#define XTSTOP      (((volatile __near __bitf_T *)0xFFA1)->no6)
#define MSTOP       (((volatile __near __bitf_T *)0xFFA1)->no7)
#define OSTC        (*(volatile __near unsigned char  *)0xFFA2)
#define OSTC_bit    (*(volatile __near __bitf_T *)0xFFA2)
#define MOST18      (((volatile __near __bitf_T *)0xFFA2)->no0)
#define MOST17      (((volatile __near __bitf_T *)0xFFA2)->no1)
#define MOST15      (((volatile __near __bitf_T *)0xFFA2)->no2)
#define MOST13      (((volatile __near __bitf_T *)0xFFA2)->no3)
#define MOST11      (((volatile __near __bitf_T *)0xFFA2)->no4)
#define MOST10      (((volatile __near __bitf_T *)0xFFA2)->no5)
#define MOST9       (((volatile __near __bitf_T *)0xFFA2)->no6)
#define MOST8       (((volatile __near __bitf_T *)0xFFA2)->no7)
#define OSTS        (*(volatile __near unsigned char  *)0xFFA3)
#define CKC         (*(volatile __near unsigned char  *)0xFFA4)
#define CKC_bit     (*(volatile __near __bitf_T *)0xFFA4)
#define MCM0        (((volatile __near __bitf_T *)0xFFA4)->no4)
#define MCS         (((volatile __near __bitf_T *)0xFFA4)->no5)
#define CSS         (((volatile __near __bitf_T *)0xFFA4)->no6)
#define CLS         (((volatile __near __bitf_T *)0xFFA4)->no7)
#define CKS0        (*(volatile __near unsigned char  *)0xFFA5)
#define CKS0_bit    (*(volatile __near __bitf_T *)0xFFA5)
#define CCS00       (((volatile __near __bitf_T *)0xFFA5)->no0)
#define CCS01       (((volatile __near __bitf_T *)0xFFA5)->no1)
#define CCS02       (((volatile __near __bitf_T *)0xFFA5)->no2)
#define CSEL0       (((volatile __near __bitf_T *)0xFFA5)->no3)
#define PCLOE0      (((volatile __near __bitf_T *)0xFFA5)->no7)
#define RESF        (*(volatile __near unsigned char  *)0xFFA8)
#define LVIM        (*(volatile __near unsigned char  *)0xFFA9)
#define LVIM_bit    (*(volatile __near __bitf_T *)0xFFA9)
#define LVIF        (((volatile __near __bitf_T *)0xFFA9)->no0)
#define LVIOMSK     (((volatile __near __bitf_T *)0xFFA9)->no1)
#define LVISEN      (((volatile __near __bitf_T *)0xFFA9)->no7)
#define LVIS        (*(volatile __near unsigned char  *)0xFFAA)
#define LVIS_bit    (*(volatile __near __bitf_T *)0xFFAA)
#define LVILV       (((volatile __near __bitf_T *)0xFFAA)->no0)
#define LVIMD       (((volatile __near __bitf_T *)0xFFAA)->no7)
#define WDTE        (*(volatile __near unsigned char  *)0xFFAB)
#define CRCIN       (*(volatile __near unsigned char  *)0xFFAC)
#define DSA0        (*(volatile __near unsigned char  *)0xFFB0)
#define DSA1        (*(volatile __near unsigned char  *)0xFFB1)
#define DRA0        (*(volatile __near unsigned short *)0xFFB2)
#define DRA0L       (*(volatile __near unsigned char  *)0xFFB2)
#define DRA0H       (*(volatile __near unsigned char  *)0xFFB3)
#define DRA1        (*(volatile __near unsigned short *)0xFFB4)
#define DRA1L       (*(volatile __near unsigned char  *)0xFFB4)
#define DRA1H       (*(volatile __near unsigned char  *)0xFFB5)
#define DBC0        (*(volatile __near unsigned short *)0xFFB6)
#define DBC0L       (*(volatile __near unsigned char  *)0xFFB6)
#define DBC0H       (*(volatile __near unsigned char  *)0xFFB7)
#define DBC1        (*(volatile __near unsigned short *)0xFFB8)
#define DBC1L       (*(volatile __near unsigned char  *)0xFFB8)
#define DBC1H       (*(volatile __near unsigned char  *)0xFFB9)
#define DMC0        (*(volatile __near unsigned char  *)0xFFBA)
#define DMC0_bit    (*(volatile __near __bitf_T *)0xFFBA)
#define IFC00       (((volatile __near __bitf_T *)0xFFBA)->no0)
#define IFC01       (((volatile __near __bitf_T *)0xFFBA)->no1)
#define IFC02       (((volatile __near __bitf_T *)0xFFBA)->no2)
#define IFC03       (((volatile __near __bitf_T *)0xFFBA)->no3)
#define DWAIT0      (((volatile __near __bitf_T *)0xFFBA)->no4)
#define DS0         (((volatile __near __bitf_T *)0xFFBA)->no5)
#define DRS0        (((volatile __near __bitf_T *)0xFFBA)->no6)
#define STG0        (((volatile __near __bitf_T *)0xFFBA)->no7)
#define DMC1        (*(volatile __near unsigned char  *)0xFFBB)
#define DMC1_bit    (*(volatile __near __bitf_T *)0xFFBB)
#define IFC10       (((volatile __near __bitf_T *)0xFFBB)->no0)
#define IFC11       (((volatile __near __bitf_T *)0xFFBB)->no1)
#define IFC12       (((volatile __near __bitf_T *)0xFFBB)->no2)
#define IFC13       (((volatile __near __bitf_T *)0xFFBB)->no3)
#define DWAIT1      (((volatile __near __bitf_T *)0xFFBB)->no4)
#define DS1         (((volatile __near __bitf_T *)0xFFBB)->no5)
#define DRS1        (((volatile __near __bitf_T *)0xFFBB)->no6)
#define STG1        (((volatile __near __bitf_T *)0xFFBB)->no7)
#define DRC0        (*(volatile __near unsigned char  *)0xFFBC)
#define DRC0_bit    (*(volatile __near __bitf_T *)0xFFBC)
#define DST0        (((volatile __near __bitf_T *)0xFFBC)->no0)
#define DEN0        (((volatile __near __bitf_T *)0xFFBC)->no7)
#define DRC1        (*(volatile __near unsigned char  *)0xFFBD)
#define DRC1_bit    (*(volatile __near __bitf_T *)0xFFBD)
#define DST1        (((volatile __near __bitf_T *)0xFFBD)->no0)
#define DEN1        (((volatile __near __bitf_T *)0xFFBD)->no7)
#define IF2         (*(volatile __near unsigned short *)0xFFD0)
#define IF2L        (*(volatile __near unsigned char  *)0xFFD0)
#define IF2L_bit    (*(volatile __near __bitf_T *)0xFFD0)
#define IF2H        (*(volatile __near unsigned char  *)0xFFD1)
#define IF2H_bit    (*(volatile __near __bitf_T *)0xFFD1)
#define TMIF05      (((volatile __near __bitf_T *)0xFFD0)->no0)
#define TMIF06      (((volatile __near __bitf_T *)0xFFD0)->no1)
#define TMIF07      (((volatile __near __bitf_T *)0xFFD0)->no2)
#define C0ERRIF     (((volatile __near __bitf_T *)0xFFD0)->no5)
#define C0WUPIF     (((volatile __near __bitf_T *)0xFFD0)->no6)
#define C0RECIF     (((volatile __near __bitf_T *)0xFFD0)->no7)
#define C0TRXIF     (((volatile __near __bitf_T *)0xFFD1)->no0)
#define TMIF10      (((volatile __near __bitf_T *)0xFFD1)->no1)
#define TMIF11      (((volatile __near __bitf_T *)0xFFD1)->no2)
#define TMIF12      (((volatile __near __bitf_T *)0xFFD1)->no3)
#define TMIF13      (((volatile __near __bitf_T *)0xFFD1)->no4)
#define MDIF        (((volatile __near __bitf_T *)0xFFD1)->no5)
#define FLIF        (((volatile __near __bitf_T *)0xFFD1)->no7)
#define IF3         (*(volatile __near unsigned short *)0xFFD2)
#define IF3L        (*(volatile __near unsigned char  *)0xFFD2)
#define IF3L_bit    (*(volatile __near __bitf_T *)0xFFD2)
#define IF3H        (*(volatile __near unsigned char  *)0xFFD3)
#define IF3H_bit    (*(volatile __near __bitf_T *)0xFFD3)
#define TMIF14      (((volatile __near __bitf_T *)0xFFD2)->no1)
#define TMIF15      (((volatile __near __bitf_T *)0xFFD2)->no2)
#define TMIF16      (((volatile __near __bitf_T *)0xFFD2)->no3)
#define TMIF17      (((volatile __near __bitf_T *)0xFFD2)->no4)
#define TMIF20      (((volatile __near __bitf_T *)0xFFD2)->no5)
#define TMIF21      (((volatile __near __bitf_T *)0xFFD2)->no6)
#define TMIF22      (((volatile __near __bitf_T *)0xFFD2)->no7)
#define TMIF23      (((volatile __near __bitf_T *)0xFFD3)->no0)
#define TMIF24      (((volatile __near __bitf_T *)0xFFD3)->no1)
#define TMIF26      (((volatile __near __bitf_T *)0xFFD3)->no2)
#define MK2         (*(volatile __near unsigned short *)0xFFD4)
#define MK2L        (*(volatile __near unsigned char  *)0xFFD4)
#define MK2L_bit    (*(volatile __near __bitf_T *)0xFFD4)
#define MK2H        (*(volatile __near unsigned char  *)0xFFD5)
#define MK2H_bit    (*(volatile __near __bitf_T *)0xFFD5)
#define TMMK05      (((volatile __near __bitf_T *)0xFFD4)->no0)
#define TMMK06      (((volatile __near __bitf_T *)0xFFD4)->no1)
#define TMMK07      (((volatile __near __bitf_T *)0xFFD4)->no2)
#define C0ERRMK     (((volatile __near __bitf_T *)0xFFD4)->no5)
#define C0WUPMK     (((volatile __near __bitf_T *)0xFFD4)->no6)
#define C0RECMK     (((volatile __near __bitf_T *)0xFFD4)->no7)
#define C0TRXMK     (((volatile __near __bitf_T *)0xFFD5)->no0)
#define TMMK10      (((volatile __near __bitf_T *)0xFFD5)->no1)
#define TMMK11      (((volatile __near __bitf_T *)0xFFD5)->no2)
#define TMMK12      (((volatile __near __bitf_T *)0xFFD5)->no3)
#define TMMK13      (((volatile __near __bitf_T *)0xFFD5)->no4)
#define MDMK        (((volatile __near __bitf_T *)0xFFD5)->no5)
#define FLMK        (((volatile __near __bitf_T *)0xFFD5)->no7)
#define MK3         (*(volatile __near unsigned short *)0xFFD6)
#define MK3L        (*(volatile __near unsigned char  *)0xFFD6)
#define MK3L_bit    (*(volatile __near __bitf_T *)0xFFD6)
#define MK3H        (*(volatile __near unsigned char  *)0xFFD7)
#define MK3H_bit    (*(volatile __near __bitf_T *)0xFFD7)
#define TMMK14      (((volatile __near __bitf_T *)0xFFD6)->no1)
#define TMMK15      (((volatile __near __bitf_T *)0xFFD6)->no2)
#define TMMK16      (((volatile __near __bitf_T *)0xFFD6)->no3)
#define TMMK17      (((volatile __near __bitf_T *)0xFFD6)->no4)
#define TMMK20      (((volatile __near __bitf_T *)0xFFD6)->no5)
#define TMMK21      (((volatile __near __bitf_T *)0xFFD6)->no6)
#define TMMK22      (((volatile __near __bitf_T *)0xFFD6)->no7)
#define TMMK23      (((volatile __near __bitf_T *)0xFFD7)->no0)
#define TMMK24      (((volatile __near __bitf_T *)0xFFD7)->no1)
#define TMMK26      (((volatile __near __bitf_T *)0xFFD7)->no2)
#define PR02        (*(volatile __near unsigned short *)0xFFD8)
#define PR02L       (*(volatile __near unsigned char  *)0xFFD8)
#define PR02L_bit   (*(volatile __near __bitf_T *)0xFFD8)
#define PR02H       (*(volatile __near unsigned char  *)0xFFD9)
#define PR02H_bit   (*(volatile __near __bitf_T *)0xFFD9)
#define TMPR005     (((volatile __near __bitf_T *)0xFFD8)->no0)
#define TMPR006     (((volatile __near __bitf_T *)0xFFD8)->no1)
#define TMPR007     (((volatile __near __bitf_T *)0xFFD8)->no2)
#define C0ERRPR0    (((volatile __near __bitf_T *)0xFFD8)->no5)
#define C0WUPPR0    (((volatile __near __bitf_T *)0xFFD8)->no6)
#define C0RECPR0    (((volatile __near __bitf_T *)0xFFD8)->no7)
#define C0TRXPR0    (((volatile __near __bitf_T *)0xFFD9)->no0)
#define TMPR010     (((volatile __near __bitf_T *)0xFFD9)->no1)
#define TMPR011     (((volatile __near __bitf_T *)0xFFD9)->no2)
#define TMPR012     (((volatile __near __bitf_T *)0xFFD9)->no3)
#define TMPR013     (((volatile __near __bitf_T *)0xFFD9)->no4)
#define MDPR0       (((volatile __near __bitf_T *)0xFFD9)->no5)
#define FLPR0       (((volatile __near __bitf_T *)0xFFD9)->no7)
#define PR03        (*(volatile __near unsigned short *)0xFFDA)
#define PR03L       (*(volatile __near unsigned char  *)0xFFDA)
#define PR03L_bit   (*(volatile __near __bitf_T *)0xFFDA)
#define PR03H       (*(volatile __near unsigned char  *)0xFFDB)
#define PR03H_bit   (*(volatile __near __bitf_T *)0xFFDB)
#define TMPR014     (((volatile __near __bitf_T *)0xFFDA)->no1)
#define TMPR015     (((volatile __near __bitf_T *)0xFFDA)->no2)
#define TMPR016     (((volatile __near __bitf_T *)0xFFDA)->no3)
#define TMPR017     (((volatile __near __bitf_T *)0xFFDA)->no4)
#define TMPR020     (((volatile __near __bitf_T *)0xFFDA)->no5)
#define TMPR021     (((volatile __near __bitf_T *)0xFFDA)->no6)
#define TMPR022     (((volatile __near __bitf_T *)0xFFDA)->no7)
#define TMPR023     (((volatile __near __bitf_T *)0xFFDB)->no0)
#define TMPR024     (((volatile __near __bitf_T *)0xFFDB)->no1)
#define TMPR026     (((volatile __near __bitf_T *)0xFFDB)->no2)
#define PR12        (*(volatile __near unsigned short *)0xFFDC)
#define PR12L       (*(volatile __near unsigned char  *)0xFFDC)
#define PR12L_bit   (*(volatile __near __bitf_T *)0xFFDC)
#define PR12H       (*(volatile __near unsigned char  *)0xFFDD)
#define PR12H_bit   (*(volatile __near __bitf_T *)0xFFDD)
#define TMPR105     (((volatile __near __bitf_T *)0xFFDC)->no0)
#define TMPR106     (((volatile __near __bitf_T *)0xFFDC)->no1)
#define TMPR107     (((volatile __near __bitf_T *)0xFFDC)->no2)
#define C0ERRPR1    (((volatile __near __bitf_T *)0xFFDC)->no5)
#define C0WUPPR1    (((volatile __near __bitf_T *)0xFFDC)->no6)
#define C0RECPR1    (((volatile __near __bitf_T *)0xFFDC)->no7)
#define C0TRXPR1    (((volatile __near __bitf_T *)0xFFDD)->no0)
#define TMPR110     (((volatile __near __bitf_T *)0xFFDD)->no1)
#define TMPR111     (((volatile __near __bitf_T *)0xFFDD)->no2)
#define TMPR112     (((volatile __near __bitf_T *)0xFFDD)->no3)
#define TMPR113     (((volatile __near __bitf_T *)0xFFDD)->no4)
#define MDPR1       (((volatile __near __bitf_T *)0xFFDD)->no5)
#define FLPR1       (((volatile __near __bitf_T *)0xFFDD)->no7)
#define PR13        (*(volatile __near unsigned short *)0xFFDE)
#define PR13L       (*(volatile __near unsigned char  *)0xFFDE)
#define PR13L_bit   (*(volatile __near __bitf_T *)0xFFDE)
#define PR13H       (*(volatile __near unsigned char  *)0xFFDF)
#define PR13H_bit   (*(volatile __near __bitf_T *)0xFFDF)
#define TMPR114     (((volatile __near __bitf_T *)0xFFDE)->no1)
#define TMPR115     (((volatile __near __bitf_T *)0xFFDE)->no2)
#define TMPR116     (((volatile __near __bitf_T *)0xFFDE)->no3)
#define TMPR117     (((volatile __near __bitf_T *)0xFFDE)->no4)
#define TMPR120     (((volatile __near __bitf_T *)0xFFDE)->no5)
#define TMPR121     (((volatile __near __bitf_T *)0xFFDE)->no6)
#define TMPR122     (((volatile __near __bitf_T *)0xFFDE)->no7)
#define TMPR123     (((volatile __near __bitf_T *)0xFFDF)->no0)
#define TMPR124     (((volatile __near __bitf_T *)0xFFDF)->no1)
#define TMPR126     (((volatile __near __bitf_T *)0xFFDF)->no2)
#define IF0         (*(volatile __near unsigned short *)0xFFE0)
#define IF0L        (*(volatile __near unsigned char  *)0xFFE0)
#define IF0L_bit    (*(volatile __near __bitf_T *)0xFFE0)
#define IF0H        (*(volatile __near unsigned char  *)0xFFE1)
#define IF0H_bit    (*(volatile __near __bitf_T *)0xFFE1)
#define WDTIIF      (((volatile __near __bitf_T *)0xFFE0)->no0)
#define LVIIF       (((volatile __near __bitf_T *)0xFFE0)->no1)
#define PIF0        (((volatile __near __bitf_T *)0xFFE0)->no2)
#define PIF1        (((volatile __near __bitf_T *)0xFFE0)->no3)
#define PIF2        (((volatile __near __bitf_T *)0xFFE0)->no4)
#define PIF3        (((volatile __near __bitf_T *)0xFFE0)->no5)
#define PIF4        (((volatile __near __bitf_T *)0xFFE0)->no6)
#define PIF5        (((volatile __near __bitf_T *)0xFFE0)->no7)
#define CLMIF       (((volatile __near __bitf_T *)0xFFE1)->no0)
#define CSIIF00     (((volatile __near __bitf_T *)0xFFE1)->no1)
#define CSIIF01     (((volatile __near __bitf_T *)0xFFE1)->no2)
#define DMAIF0      (((volatile __near __bitf_T *)0xFFE1)->no3)
#define DMAIF1      (((volatile __near __bitf_T *)0xFFE1)->no4)
#define RTCIF       (((volatile __near __bitf_T *)0xFFE1)->no5)
#define ITIF        (((volatile __near __bitf_T *)0xFFE1)->no6)
#define LTIF0       (((volatile __near __bitf_T *)0xFFE1)->no7)
#define IF1         (*(volatile __near unsigned short *)0xFFE2)
#define IF1L        (*(volatile __near unsigned char  *)0xFFE2)
#define IF1L_bit    (*(volatile __near __bitf_T *)0xFFE2)
#define IF1H        (*(volatile __near unsigned char  *)0xFFE3)
#define IF1H_bit    (*(volatile __near __bitf_T *)0xFFE3)
#define LRIF0       (((volatile __near __bitf_T *)0xFFE2)->no0)
#define LSIF0       (((volatile __near __bitf_T *)0xFFE2)->no1)
#define PIFLR0      (((volatile __near __bitf_T *)0xFFE2)->no2)
#define SGIF        (((volatile __near __bitf_T *)0xFFE2)->no3)
#define TMIF00      (((volatile __near __bitf_T *)0xFFE2)->no4)
#define TMIF01      (((volatile __near __bitf_T *)0xFFE2)->no5)
#define TMIF02      (((volatile __near __bitf_T *)0xFFE2)->no6)
#define TMIF03      (((volatile __near __bitf_T *)0xFFE2)->no7)
#define ADIF        (((volatile __near __bitf_T *)0xFFE3)->no0)
#define LTIF1       (((volatile __near __bitf_T *)0xFFE3)->no1)
#define LRIF1       (((volatile __near __bitf_T *)0xFFE3)->no2)
#define LSIF1       (((volatile __near __bitf_T *)0xFFE3)->no3)
#define PIFLR1      (((volatile __near __bitf_T *)0xFFE3)->no4)
#define IICIF11     (((volatile __near __bitf_T *)0xFFE3)->no6)
#define TMIF04      (((volatile __near __bitf_T *)0xFFE3)->no7)
#define MK0         (*(volatile __near unsigned short *)0xFFE4)
#define MK0L        (*(volatile __near unsigned char  *)0xFFE4)
#define MK0L_bit    (*(volatile __near __bitf_T *)0xFFE4)
#define MK0H        (*(volatile __near unsigned char  *)0xFFE5)
#define MK0H_bit    (*(volatile __near __bitf_T *)0xFFE5)
#define WDTIMK      (((volatile __near __bitf_T *)0xFFE4)->no0)
#define LVIMK       (((volatile __near __bitf_T *)0xFFE4)->no1)
#define PMK0        (((volatile __near __bitf_T *)0xFFE4)->no2)
#define PMK1        (((volatile __near __bitf_T *)0xFFE4)->no3)
#define PMK2        (((volatile __near __bitf_T *)0xFFE4)->no4)
#define PMK3        (((volatile __near __bitf_T *)0xFFE4)->no5)
#define PMK4        (((volatile __near __bitf_T *)0xFFE4)->no6)
#define PMK5        (((volatile __near __bitf_T *)0xFFE4)->no7)
#define CLMMK       (((volatile __near __bitf_T *)0xFFE5)->no0)
#define CSIMK00     (((volatile __near __bitf_T *)0xFFE5)->no1)
#define CSIMK01     (((volatile __near __bitf_T *)0xFFE5)->no2)
#define DMAMK0      (((volatile __near __bitf_T *)0xFFE5)->no3)
#define DMAMK1      (((volatile __near __bitf_T *)0xFFE5)->no4)
#define RTCMK       (((volatile __near __bitf_T *)0xFFE5)->no5)
#define ITMK        (((volatile __near __bitf_T *)0xFFE5)->no6)
#define LTMK0       (((volatile __near __bitf_T *)0xFFE5)->no7)
#define MK1         (*(volatile __near unsigned short *)0xFFE6)
#define MK1L        (*(volatile __near unsigned char  *)0xFFE6)
#define MK1L_bit    (*(volatile __near __bitf_T *)0xFFE6)
#define MK1H        (*(volatile __near unsigned char  *)0xFFE7)
#define MK1H_bit    (*(volatile __near __bitf_T *)0xFFE7)
#define LRMK0       (((volatile __near __bitf_T *)0xFFE6)->no0)
#define LSMK0       (((volatile __near __bitf_T *)0xFFE6)->no1)
#define PMKLR0      (((volatile __near __bitf_T *)0xFFE6)->no2)
#define SGMK        (((volatile __near __bitf_T *)0xFFE6)->no3)
#define TMMK00      (((volatile __near __bitf_T *)0xFFE6)->no4)
#define TMMK01      (((volatile __near __bitf_T *)0xFFE6)->no5)
#define TMMK02      (((volatile __near __bitf_T *)0xFFE6)->no6)
#define TMMK03      (((volatile __near __bitf_T *)0xFFE6)->no7)
#define ADMK        (((volatile __near __bitf_T *)0xFFE7)->no0)
#define LTMK1       (((volatile __near __bitf_T *)0xFFE7)->no1)
#define LRMK1       (((volatile __near __bitf_T *)0xFFE7)->no2)
#define LSMK1       (((volatile __near __bitf_T *)0xFFE7)->no3)
#define PMKLR1      (((volatile __near __bitf_T *)0xFFE7)->no4)
#define IICMK11     (((volatile __near __bitf_T *)0xFFE7)->no6)
#define TMMK04      (((volatile __near __bitf_T *)0xFFE7)->no7)
#define PR00        (*(volatile __near unsigned short *)0xFFE8)
#define PR00L       (*(volatile __near unsigned char  *)0xFFE8)
#define PR00L_bit   (*(volatile __near __bitf_T *)0xFFE8)
#define PR00H       (*(volatile __near unsigned char  *)0xFFE9)
#define PR00H_bit   (*(volatile __near __bitf_T *)0xFFE9)
#define WDTIPR0     (((volatile __near __bitf_T *)0xFFE8)->no0)
#define LVIPR0      (((volatile __near __bitf_T *)0xFFE8)->no1)
#define PPR00       (((volatile __near __bitf_T *)0xFFE8)->no2)
#define PPR01       (((volatile __near __bitf_T *)0xFFE8)->no3)
#define PPR02       (((volatile __near __bitf_T *)0xFFE8)->no4)
#define PPR03       (((volatile __near __bitf_T *)0xFFE8)->no5)
#define PPR04       (((volatile __near __bitf_T *)0xFFE8)->no6)
#define PPR05       (((volatile __near __bitf_T *)0xFFE8)->no7)
#define CLMPR0      (((volatile __near __bitf_T *)0xFFE9)->no0)
#define CSIPR000    (((volatile __near __bitf_T *)0xFFE9)->no1)
#define CSIPR001    (((volatile __near __bitf_T *)0xFFE9)->no2)
#define DMAPR00     (((volatile __near __bitf_T *)0xFFE9)->no3)
#define DMAPR01     (((volatile __near __bitf_T *)0xFFE9)->no4)
#define RTCPR0      (((volatile __near __bitf_T *)0xFFE9)->no5)
#define ITPR0       (((volatile __near __bitf_T *)0xFFE9)->no6)
#define LTPR00      (((volatile __near __bitf_T *)0xFFE9)->no7)
#define PR01        (*(volatile __near unsigned short *)0xFFEA)
#define PR01L       (*(volatile __near unsigned char  *)0xFFEA)
#define PR01L_bit   (*(volatile __near __bitf_T *)0xFFEA)
#define PR01H       (*(volatile __near unsigned char  *)0xFFEB)
#define PR01H_bit   (*(volatile __near __bitf_T *)0xFFEB)
#define LRPR00      (((volatile __near __bitf_T *)0xFFEA)->no0)
#define LSPR00      (((volatile __near __bitf_T *)0xFFEA)->no1)
#define PPR0LR0     (((volatile __near __bitf_T *)0xFFEA)->no2)
#define SGPR0       (((volatile __near __bitf_T *)0xFFEA)->no3)
#define TMPR000     (((volatile __near __bitf_T *)0xFFEA)->no4)
#define TMPR001     (((volatile __near __bitf_T *)0xFFEA)->no5)
#define TMPR002     (((volatile __near __bitf_T *)0xFFEA)->no6)
#define TMPR003     (((volatile __near __bitf_T *)0xFFEA)->no7)
#define ADPR0       (((volatile __near __bitf_T *)0xFFEB)->no0)
#define LTPR01      (((volatile __near __bitf_T *)0xFFEB)->no1)
#define LRPR01      (((volatile __near __bitf_T *)0xFFEB)->no2)
#define LSPR01      (((volatile __near __bitf_T *)0xFFEB)->no3)
#define PPR0LR1     (((volatile __near __bitf_T *)0xFFEB)->no4)
#define IICPR011    (((volatile __near __bitf_T *)0xFFEB)->no6)
#define TMPR004     (((volatile __near __bitf_T *)0xFFEB)->no7)
#define PR10        (*(volatile __near unsigned short *)0xFFEC)
#define PR10L       (*(volatile __near unsigned char  *)0xFFEC)
#define PR10L_bit   (*(volatile __near __bitf_T *)0xFFEC)
#define PR10H       (*(volatile __near unsigned char  *)0xFFED)
#define PR10H_bit   (*(volatile __near __bitf_T *)0xFFED)
#define WDTIPR1     (((volatile __near __bitf_T *)0xFFEC)->no0)
#define LVIPR1      (((volatile __near __bitf_T *)0xFFEC)->no1)
#define PPR10       (((volatile __near __bitf_T *)0xFFEC)->no2)
#define PPR11       (((volatile __near __bitf_T *)0xFFEC)->no3)
#define PPR12       (((volatile __near __bitf_T *)0xFFEC)->no4)
#define PPR13       (((volatile __near __bitf_T *)0xFFEC)->no5)
#define PPR14       (((volatile __near __bitf_T *)0xFFEC)->no6)
#define PPR15       (((volatile __near __bitf_T *)0xFFEC)->no7)
#define CLMPR1      (((volatile __near __bitf_T *)0xFFED)->no0)
#define CSIPR100    (((volatile __near __bitf_T *)0xFFED)->no1)
#define CSIPR101    (((volatile __near __bitf_T *)0xFFED)->no2)
#define DMAPR10     (((volatile __near __bitf_T *)0xFFED)->no3)
#define DMAPR11     (((volatile __near __bitf_T *)0xFFED)->no4)
#define RTCPR1      (((volatile __near __bitf_T *)0xFFED)->no5)
#define ITPR1       (((volatile __near __bitf_T *)0xFFED)->no6)
#define LTPR10      (((volatile __near __bitf_T *)0xFFED)->no7)
#define PR11        (*(volatile __near unsigned short *)0xFFEE)
#define PR11L       (*(volatile __near unsigned char  *)0xFFEE)
#define PR11L_bit   (*(volatile __near __bitf_T *)0xFFEE)
#define PR11H       (*(volatile __near unsigned char  *)0xFFEF)
#define PR11H_bit   (*(volatile __near __bitf_T *)0xFFEF)
#define LRPR10      (((volatile __near __bitf_T *)0xFFEE)->no0)
#define LSPR10      (((volatile __near __bitf_T *)0xFFEE)->no1)
#define PPR1LR0     (((volatile __near __bitf_T *)0xFFEE)->no2)
#define SGPR1       (((volatile __near __bitf_T *)0xFFEE)->no3)
#define TMPR100     (((volatile __near __bitf_T *)0xFFEE)->no4)
#define TMPR101     (((volatile __near __bitf_T *)0xFFEE)->no5)
#define TMPR102     (((volatile __near __bitf_T *)0xFFEE)->no6)
#define TMPR103     (((volatile __near __bitf_T *)0xFFEE)->no7)
#define ADPR1       (((volatile __near __bitf_T *)0xFFEF)->no0)
#define LTPR11      (((volatile __near __bitf_T *)0xFFEF)->no1)
#define LRPR11      (((volatile __near __bitf_T *)0xFFEF)->no2)
#define LSPR11      (((volatile __near __bitf_T *)0xFFEF)->no3)
#define PPR1LR1     (((volatile __near __bitf_T *)0xFFEF)->no4)
#define IICPR111    (((volatile __near __bitf_T *)0xFFEF)->no6)
#define TMPR104     (((volatile __near __bitf_T *)0xFFEF)->no7)
#define MDAL        (*(volatile __near unsigned short *)0xFFF0)
#define MULA        (*(volatile __near unsigned short *)0xFFF0)
#define MDAH        (*(volatile __near unsigned short *)0xFFF2)
#define MULB        (*(volatile __near unsigned short *)0xFFF2)
#define MDBH        (*(volatile __near unsigned short *)0xFFF4)
#define MULOH       (*(volatile __near unsigned short *)0xFFF4)
#define MDBL        (*(volatile __near unsigned short *)0xFFF6)
#define MULOL       (*(volatile __near unsigned short *)0xFFF6)
#define PMC         (*(volatile __near unsigned char  *)0xFFFE)
#define PMC_bit     (*(volatile __near __bitf_T *)0xFFFE)
#define MAA         (((volatile __near __bitf_T *)0xFFFE)->no0)


#define INTWDTI                         0x0004
#define INTLVI                          0x0006
#define INTP0                           0x0008
#define INTP1                           0x000A
#define INTP2                           0x000C
#define INTP3                           0x000E
#define INTP4                           0x0010
#define INTP5                           0x0012
#define INTCLM                          0x0014
#define INTCSI00                        0x0016
#define INTCSI01                        0x0018
#define INTDMA0                         0x001A
#define INTDMA1                         0x001C
#define INTRTC                          0x001E
#define INTIT                           0x0020
#define INTLT0                          0x0022
#define INTLR0                          0x0024
#define INTLS0                          0x0026
#define INTPLR0                         0x0028
#define INTSG                           0x002A
#define INTTM00                         0x002C
#define INTTM01                         0x002E
#define INTTM02                         0x0030
#define INTTM03                         0x0032
#define INTAD                           0x0034
#define INTLT1                          0x0036
#define INTLR1                          0x0038
#define INTLS1                          0x003A
#define INTPLR1                         0x003C
#define INTIIC11                        0x0040
#define INTTM04                         0x0042
#define INTTM05                         0x0044
#define INTTM06                         0x0046
#define INTTM07                         0x0048
#define INTC0ERR                        0x004E
#define INTC0WUP                        0x0050
#define INTC0REC                        0x0052
#define INTC0TRX                        0x0054
#define INTTM10                         0x0056
#define INTTM11                         0x0058
#define INTTM12                         0x005A
#define INTTM13                         0x005C
#define INTMD                           0x005E
#define INTFL                           0x0062
#define INTTM14                         0x0066
#define INTTM15                         0x0068
#define INTTM16                         0x006A
#define INTTM17                         0x006C
#define INTTM20                         0x006E
#define INTTM21                         0x0070
#define INTTM22                         0x0072
#define INTTM23                         0x0074
#define INTTM24                         0x0076
#define INTTM26                         0x0078

#endif
